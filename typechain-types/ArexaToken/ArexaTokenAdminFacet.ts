/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type { FunctionFragment, Result } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "../common";

export interface ArexaTokenAdminFacetInterface extends utils.Interface {
  functions: {
    "getGeneralFee()": FunctionFragment;
    "getGeneralFeeAddress()": FunctionFragment;
    "getPoolFee()": FunctionFragment;
    "getPoolFeeAddress()": FunctionFragment;
    "getTreasuryAddress()": FunctionFragment;
    "getURL()": FunctionFragment;
    "setGeneralFee(uint16)": FunctionFragment;
    "setGeneralFeeAddress(address)": FunctionFragment;
    "setPoolFee(uint16)": FunctionFragment;
    "setPoolFeeAddress(address)": FunctionFragment;
    "setTreasuryAddress(address)": FunctionFragment;
    "setURL(string)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "getGeneralFee"
      | "getGeneralFeeAddress"
      | "getPoolFee"
      | "getPoolFeeAddress"
      | "getTreasuryAddress"
      | "getURL"
      | "setGeneralFee"
      | "setGeneralFeeAddress"
      | "setPoolFee"
      | "setPoolFeeAddress"
      | "setTreasuryAddress"
      | "setURL"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "getGeneralFee",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getGeneralFeeAddress",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getPoolFee",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getPoolFeeAddress",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getTreasuryAddress",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "getURL", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "setGeneralFee",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "setGeneralFeeAddress",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "setPoolFee",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "setPoolFeeAddress",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "setTreasuryAddress",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "setURL",
    values: [PromiseOrValue<string>]
  ): string;

  decodeFunctionResult(
    functionFragment: "getGeneralFee",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getGeneralFeeAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getPoolFee", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getPoolFeeAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getTreasuryAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getURL", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "setGeneralFee",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setGeneralFeeAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "setPoolFee", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "setPoolFeeAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setTreasuryAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "setURL", data: BytesLike): Result;

  events: {};
}

export interface ArexaTokenAdminFacet extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: ArexaTokenAdminFacetInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    getGeneralFee(overrides?: CallOverrides): Promise<[number]>;

    getGeneralFeeAddress(overrides?: CallOverrides): Promise<[string]>;

    getPoolFee(overrides?: CallOverrides): Promise<[number]>;

    getPoolFeeAddress(overrides?: CallOverrides): Promise<[string]>;

    getTreasuryAddress(overrides?: CallOverrides): Promise<[string]>;

    getURL(overrides?: CallOverrides): Promise<[string]>;

    setGeneralFee(
      _generalFee: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    setGeneralFeeAddress(
      _generalFeeAddress: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    setPoolFee(
      _PoolFee: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    setPoolFeeAddress(
      _PoolFeeAddress: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    setTreasuryAddress(
      _treasuryAddress: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    setURL(
      _url: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;
  };

  getGeneralFee(overrides?: CallOverrides): Promise<number>;

  getGeneralFeeAddress(overrides?: CallOverrides): Promise<string>;

  getPoolFee(overrides?: CallOverrides): Promise<number>;

  getPoolFeeAddress(overrides?: CallOverrides): Promise<string>;

  getTreasuryAddress(overrides?: CallOverrides): Promise<string>;

  getURL(overrides?: CallOverrides): Promise<string>;

  setGeneralFee(
    _generalFee: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  setGeneralFeeAddress(
    _generalFeeAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  setPoolFee(
    _PoolFee: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  setPoolFeeAddress(
    _PoolFeeAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  setTreasuryAddress(
    _treasuryAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  setURL(
    _url: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    getGeneralFee(overrides?: CallOverrides): Promise<number>;

    getGeneralFeeAddress(overrides?: CallOverrides): Promise<string>;

    getPoolFee(overrides?: CallOverrides): Promise<number>;

    getPoolFeeAddress(overrides?: CallOverrides): Promise<string>;

    getTreasuryAddress(overrides?: CallOverrides): Promise<string>;

    getURL(overrides?: CallOverrides): Promise<string>;

    setGeneralFee(
      _generalFee: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    setGeneralFeeAddress(
      _generalFeeAddress: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    setPoolFee(
      _PoolFee: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    setPoolFeeAddress(
      _PoolFeeAddress: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    setTreasuryAddress(
      _treasuryAddress: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    setURL(
      _url: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {};

  estimateGas: {
    getGeneralFee(overrides?: CallOverrides): Promise<BigNumber>;

    getGeneralFeeAddress(overrides?: CallOverrides): Promise<BigNumber>;

    getPoolFee(overrides?: CallOverrides): Promise<BigNumber>;

    getPoolFeeAddress(overrides?: CallOverrides): Promise<BigNumber>;

    getTreasuryAddress(overrides?: CallOverrides): Promise<BigNumber>;

    getURL(overrides?: CallOverrides): Promise<BigNumber>;

    setGeneralFee(
      _generalFee: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    setGeneralFeeAddress(
      _generalFeeAddress: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    setPoolFee(
      _PoolFee: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    setPoolFeeAddress(
      _PoolFeeAddress: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    setTreasuryAddress(
      _treasuryAddress: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    setURL(
      _url: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    getGeneralFee(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getGeneralFeeAddress(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getPoolFee(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getPoolFeeAddress(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getTreasuryAddress(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getURL(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    setGeneralFee(
      _generalFee: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    setGeneralFeeAddress(
      _generalFeeAddress: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    setPoolFee(
      _PoolFee: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    setPoolFeeAddress(
      _PoolFeeAddress: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    setTreasuryAddress(
      _treasuryAddress: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    setURL(
      _url: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;
  };
}
