/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BytesLike,
  CallOverrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type { FunctionFragment, Result } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
} from "../../common";

export interface LibTokenConstInterface extends utils.Interface {
  functions: {
    "AML_ROLE()": FunctionFragment;
    "COMPLIANCE_ROLE()": FunctionFragment;
    "FULL()": FunctionFragment;
    "RECIPIENT_BL()": FunctionFragment;
    "RECIPIENT_FREE_FEE_WL()": FunctionFragment;
    "SENDER_BL()": FunctionFragment;
    "SENDER_FREE_FEE_WL()": FunctionFragment;
    "TOKEN_ADMIN_ROLE()": FunctionFragment;
    "TREASURY_ROLE()": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "AML_ROLE"
      | "COMPLIANCE_ROLE"
      | "FULL"
      | "RECIPIENT_BL"
      | "RECIPIENT_FREE_FEE_WL"
      | "SENDER_BL"
      | "SENDER_FREE_FEE_WL"
      | "TOKEN_ADMIN_ROLE"
      | "TREASURY_ROLE"
  ): FunctionFragment;

  encodeFunctionData(functionFragment: "AML_ROLE", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "COMPLIANCE_ROLE",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "FULL", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "RECIPIENT_BL",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "RECIPIENT_FREE_FEE_WL",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "SENDER_BL", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "SENDER_FREE_FEE_WL",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "TOKEN_ADMIN_ROLE",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "TREASURY_ROLE",
    values?: undefined
  ): string;

  decodeFunctionResult(functionFragment: "AML_ROLE", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "COMPLIANCE_ROLE",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "FULL", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "RECIPIENT_BL",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "RECIPIENT_FREE_FEE_WL",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "SENDER_BL", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "SENDER_FREE_FEE_WL",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "TOKEN_ADMIN_ROLE",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "TREASURY_ROLE",
    data: BytesLike
  ): Result;

  events: {};
}

export interface LibTokenConst extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: LibTokenConstInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    AML_ROLE(overrides?: CallOverrides): Promise<[string]>;

    COMPLIANCE_ROLE(overrides?: CallOverrides): Promise<[string]>;

    FULL(overrides?: CallOverrides): Promise<[string]>;

    RECIPIENT_BL(overrides?: CallOverrides): Promise<[string]>;

    RECIPIENT_FREE_FEE_WL(overrides?: CallOverrides): Promise<[string]>;

    SENDER_BL(overrides?: CallOverrides): Promise<[string]>;

    SENDER_FREE_FEE_WL(overrides?: CallOverrides): Promise<[string]>;

    TOKEN_ADMIN_ROLE(overrides?: CallOverrides): Promise<[string]>;

    TREASURY_ROLE(overrides?: CallOverrides): Promise<[string]>;
  };

  AML_ROLE(overrides?: CallOverrides): Promise<string>;

  COMPLIANCE_ROLE(overrides?: CallOverrides): Promise<string>;

  FULL(overrides?: CallOverrides): Promise<string>;

  RECIPIENT_BL(overrides?: CallOverrides): Promise<string>;

  RECIPIENT_FREE_FEE_WL(overrides?: CallOverrides): Promise<string>;

  SENDER_BL(overrides?: CallOverrides): Promise<string>;

  SENDER_FREE_FEE_WL(overrides?: CallOverrides): Promise<string>;

  TOKEN_ADMIN_ROLE(overrides?: CallOverrides): Promise<string>;

  TREASURY_ROLE(overrides?: CallOverrides): Promise<string>;

  callStatic: {
    AML_ROLE(overrides?: CallOverrides): Promise<string>;

    COMPLIANCE_ROLE(overrides?: CallOverrides): Promise<string>;

    FULL(overrides?: CallOverrides): Promise<string>;

    RECIPIENT_BL(overrides?: CallOverrides): Promise<string>;

    RECIPIENT_FREE_FEE_WL(overrides?: CallOverrides): Promise<string>;

    SENDER_BL(overrides?: CallOverrides): Promise<string>;

    SENDER_FREE_FEE_WL(overrides?: CallOverrides): Promise<string>;

    TOKEN_ADMIN_ROLE(overrides?: CallOverrides): Promise<string>;

    TREASURY_ROLE(overrides?: CallOverrides): Promise<string>;
  };

  filters: {};

  estimateGas: {
    AML_ROLE(overrides?: CallOverrides): Promise<BigNumber>;

    COMPLIANCE_ROLE(overrides?: CallOverrides): Promise<BigNumber>;

    FULL(overrides?: CallOverrides): Promise<BigNumber>;

    RECIPIENT_BL(overrides?: CallOverrides): Promise<BigNumber>;

    RECIPIENT_FREE_FEE_WL(overrides?: CallOverrides): Promise<BigNumber>;

    SENDER_BL(overrides?: CallOverrides): Promise<BigNumber>;

    SENDER_FREE_FEE_WL(overrides?: CallOverrides): Promise<BigNumber>;

    TOKEN_ADMIN_ROLE(overrides?: CallOverrides): Promise<BigNumber>;

    TREASURY_ROLE(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    AML_ROLE(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    COMPLIANCE_ROLE(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    FULL(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    RECIPIENT_BL(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    RECIPIENT_FREE_FEE_WL(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    SENDER_BL(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    SENDER_FREE_FEE_WL(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    TOKEN_ADMIN_ROLE(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    TREASURY_ROLE(overrides?: CallOverrides): Promise<PopulatedTransaction>;
  };
}
