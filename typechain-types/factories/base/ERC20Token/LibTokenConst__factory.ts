/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  LibTokenConst,
  LibTokenConstInterface,
} from "../../../base/ERC20Token/LibTokenConst";

const _abi = [
  {
    inputs: [],
    name: "AML_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "COMPLIANCE_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "FULL",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RECIPIENT_BL",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RECIPIENT_FREE_FEE_WL",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SENDER_BL",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SENDER_FREE_FEE_WL",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TOKEN_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TREASURY_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x610341610053600b82828239805160001a607314610046577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361061009d5760003560e01c806383e3825b1161007057806383e3825b1461011a578063d11a57ec14610138578063d75a9def14610156578063d85d408f14610174578063f85a13a4146101925761009d565b8063062d3bd7146100a257806316aab2aa146100c05780631d338704146100de57806356dc795c146100fc575b600080fd5b6100aa6101b0565b6040516100b791906102f0565b60405180910390f35b6100c86101d4565b6040516100d591906102f0565b60405180910390f35b6100e66101f8565b6040516100f391906102f0565b60405180910390f35b61010461021c565b60405161011191906102f0565b60405180910390f35b610122610223565b60405161012f91906102f0565b60405180910390f35b610140610247565b60405161014d91906102f0565b60405180910390f35b61015e61026b565b60405161016b91906102f0565b60405180910390f35b61017c61028f565b60405161018991906102f0565b60405180910390f35b61019a6102b3565b6040516101a791906102f0565b60405180910390f35b7f442a94f1a1fac79af32856af2a64f63648cfa2ef3b98610a5bb7cbec4cee698581565b7f2e5b542f3df308d4afea2a0a7e615a38af6134400e948efd7c0f1693129e069a81565b7f17a5b61e4b0039a783f3595ae6d0f558a99530d7aec98ec66e68de70cfe9853981565b6000801b81565b7f58ee1fe68bf578a184572569d41aaa78ecfab9e6f520cea3fbeb3b18c9312f9581565b7fe1dcbdb91df27212a29bc27177c840cf2f819ecf2187432e1fac86c2dd5dfca981565b7f9e262e26e9d5bf97da5c389e15529a31bb2b13d89967a4f6eab01792567d5fd681565b7ff068a4043b7899a312f6fe21b5b3a74d16e144a513eb6a345b2c713987c93b5581565b7fc2f91dd6e7debe58ff6f83f765bc16170e3d00c80756fde41c280108425bbd4781565b6000819050919050565b6102ea816102d7565b82525050565b600060208201905061030560008301846102e1565b9291505056fea2646970667358221220dbf7a6970ba37e9d3aa1f02f399d696ed4e975e02484d06fca17f26059cd928964736f6c63430008110033";

type LibTokenConstConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LibTokenConstConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LibTokenConst__factory extends ContractFactory {
  constructor(...args: LibTokenConstConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<LibTokenConst> {
    return super.deploy(overrides || {}) as Promise<LibTokenConst>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): LibTokenConst {
    return super.attach(address) as LibTokenConst;
  }
  override connect(signer: Signer): LibTokenConst__factory {
    return super.connect(signer) as LibTokenConst__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LibTokenConstInterface {
    return new utils.Interface(_abi) as LibTokenConstInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LibTokenConst {
    return new Contract(address, _abi, signerOrProvider) as LibTokenConst;
  }
}
