/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  ArexaPoolPNLFacet,
  ArexaPoolPNLFacetInterface,
} from "../../ArexaPlatform/ArexaPoolPNLFacet";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "AccessDenied",
    type: "error",
  },
  {
    inputs: [],
    name: "TargetedPausable__TargetedPaused",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "calcDivident",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getArexaIncomeParameter",
    outputs: [
      {
        internalType: "uint32",
        name: "pool_",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "arexa_",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getInventory",
    outputs: [
      {
        internalType: "bool",
        name: "isEnabled",
        type: "bool",
      },
      {
        internalType: "int256",
        name: "sumQuantity",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "sumAmount",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "sumPnl",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getInventoryItem",
    outputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "quantity",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "deltaPnl",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "payedPnl",
            type: "int256",
          },
        ],
        internalType: "struct InventoryItem",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "toAccount",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "payoutArexaDivident",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "toAccount",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "payoutArexaIncome",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "payoutDivident",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "pool",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "arexa",
        type: "uint32",
      },
    ],
    name: "setArexaIncomeParameter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611b8b806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80636a4600ad1161005b5780636a4600ad146101025780637dd06ce21461011e578063958e3ea81461014e578063abc16e771461017f57610088565b806305acb1301461008d5780631e5da67c146100a9578063384b2c62146100c55780635d7f850c146100e1575b600080fd5b6100a760048036038101906100a291906112cd565b6101af565b005b6100c360048036038101906100be9190611358565b610240565b005b6100df60048036038101906100da9190611358565b610304565b005b6100e96103c0565b6040516100f994939291906113cc565b60405180910390f35b61011c6004803603810190610117919061144d565b61045e565b005b610138600480360381019061013391906114a0565b610584565b60405161014591906114cd565b60405180910390f35b610168600480360381019061016391906112cd565b610618565b6040516101769291906114f7565b60405180910390f35b610199600480360381019061019491906114a0565b61070e565b6040516101a69190611571565b60405180910390f35b6101b76107a8565b73ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614610224576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021b906115e9565b60405180910390fd5b6000801b610231816107e0565b61023c333384610823565b5050565b6102486107a8565b73ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16146102b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102ac906115e9565b60405180910390fd5b7f72a415ccbbed7752b009b01c3fad0a1694ff64e2a51c65a309c0517cd732d2d16102df8161093c565b6000801b6102ec816107e0565b6102fe6102f76107a8565b8585610823565b50505050565b61030c6107a8565b73ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614610379576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610370906115e9565b60405180910390fd5b7f72a415ccbbed7752b009b01c3fad0a1694ff64e2a51c65a309c0517cd732d2d16103a38161093c565b6000801b6103b0816107e0565b6103ba8484610949565b50505050565b6000806000806103ce6107a8565b73ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff161461043b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610432906115e9565b60405180910390fd5b610450610446610a91565b6317d78400610ac9565b935093509350935090919293565b6104666107a8565b73ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16146104d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ca906115e9565b60405180910390fd5b7f72a415ccbbed7752b009b01c3fad0a1694ff64e2a51c65a309c0517cd732d2d16104fd8161093c565b6000801b61050a816107e0565b60006305f5e100808761051d9190611667565b6105279190611698565b90506305f5e10081148061053e5750630bebc20081145b8061054c57506311e1a30081145b8061055a57506317d7840081145b806105685750631dcd650081145b61057157600080fd5b61057c868686610b65565b505050505050565b600061058e6107a8565b73ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16146105fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f2906115e9565b60405180910390fd5b610611610606610a91565b6317d7840084610be5565b9050919050565b6000806106236107a8565b73ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614610690576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610687906115e9565b60405180910390fd5b60006305f5e10080856106a39190611667565b6106ad9190611698565b90506305f5e1008114806106c45750630bebc20081145b806106d257506311e1a30081145b806106e057506317d7840081145b806106ee5750631dcd650081145b6106f757600080fd5b61070081610d51565b809350819450505050915091565b610716611271565b61071e6107a8565b73ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff161461078b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610782906115e9565b60405180910390fd5b6107a1610796610a91565b6317d7840084610dbc565b9050919050565b6000806107b3610e9b565b90508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b6107e981610ec8565b15610820576040517f2d0a436a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b600061082d610efb565b905061084661083a610a91565b6317d784008685610f28565b60008160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd6108906107a8565b86866040518463ffffffff1660e01b81526004016108b0939291906116f8565b6020604051808303816000875af11580156108cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f3919061175b565b905080610935576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092c906117fa565b60405180910390fd5b5050505050565b61094681336110a5565b50565b6000610953610efb565b9050806004015482111561099c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099390611866565b60405180910390fd5b60008160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd6109e66107a8565b86866040518463ffffffff1660e01b8152600401610a06939291906116f8565b6020604051808303816000875af1158015610a25573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a49919061175b565b905080610a8b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a82906117fa565b60405180910390fd5b50505050565b600080610a9c610efb565b90508060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b6000806000806000610ad96110f6565b905060008160000160008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600088815260200190815260200160002090508060000160009054906101000a900460ff168160010154826002015483600301549550955095509550505092959194509250565b6000610b6f610efb565b90508281600101600086815260200190815260200160002060000160006101000a81548163ffffffff021916908363ffffffff1602179055508181600101600086815260200190815260200160002060000160046101000a81548163ffffffff021916908363ffffffff16021790555050505050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c235760009050610d4a565b6000610c2d6110f6565b905060008160000160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600086815260200190815260200160002090508060000160009054906101000a900460ff16610ca657600092505050610d4a565b60008160040160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600080836001015414610d1e57826001015482600001548460030154610d119190611886565b610d1b91906118fe565b90505b60008260020154836001015483610d359190611968565b610d3f91906119ac565b905080955050505050505b9392505050565b6000806000610d5e610efb565b905080600101600085815260200190815260200160002060000160009054906101000a900463ffffffff16925080600101600085815260200190815260200160002060000160049054906101000a900463ffffffff16915050915091565b610dc4611271565b6000610dce6110f6565b905060008160000160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600086815260200190815260200160002090508060040160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060600160405290816000820154815260200160018201548152602001600282015481525050925050509392505050565b6000807ff72346055b4d7224c7ec19860d22963ca622fbb313761bfba507c1a3aeedf37290508091505090565b6000610ed2611123565b600001600083815260200190815260200160002060009054906101000a900460ff169050919050565b6000807f1a2f703e435318ee39feac62abda44020ca215505d5ba3284195182c842a2d3090508091505090565b6000610f326110f6565b905060008160000160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600086815260200190815260200160002090508060000160009054906101000a900460ff16610fa757505061109f565b6000831215610feb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fe290611a61565b60405180910390fd5b6000610ff8878787610be5565b90508084131561103d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161103490611af3565b60405180910390fd5b60008260040160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508481600201546110929190611968565b8160020181905550505050505b50505050565b6110af8282611150565b6110f25781816040517f521dcf0d0000000000000000000000000000000000000000000000000000000081526004016110e9929190611b2c565b60405180910390fd5b5050565b6000807ff0375085caeab71645bf74d020ee2aa37bc7b653d9e55911c1084d8c88b3c05c90508091505090565b6000807fe8ceb94393aac3e803a9d4b376f7c5ffd7e8b6caab697212a5360c34a283caa190508091505090565b60008061115b6111f1565b90506111e8838260010160008460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600087815260200190815260200160002060010161121e90919063ffffffff16565b91505092915050565b6000807f746c6723185dc95a8925081faed89cbd4670299390e2ebfb0b9c3e755e204ef490508091505090565b6000611246836000018373ffffffffffffffffffffffffffffffffffffffff1660001b61124e565b905092915050565b600080836001016000848152602001908152602001600020541415905092915050565b60405180606001604052806000815260200160008152602001600081525090565b600080fd5b6000819050919050565b6112aa81611297565b81146112b557600080fd5b50565b6000813590506112c7816112a1565b92915050565b6000602082840312156112e3576112e2611292565b5b60006112f1848285016112b8565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611325826112fa565b9050919050565b6113358161131a565b811461134057600080fd5b50565b6000813590506113528161132c565b92915050565b6000806040838503121561136f5761136e611292565b5b600061137d85828601611343565b925050602061138e858286016112b8565b9150509250929050565b60008115159050919050565b6113ad81611398565b82525050565b6000819050919050565b6113c6816113b3565b82525050565b60006080820190506113e160008301876113a4565b6113ee60208301866113bd565b6113fb60408301856113bd565b61140860608301846113bd565b95945050505050565b600063ffffffff82169050919050565b61142a81611411565b811461143557600080fd5b50565b60008135905061144781611421565b92915050565b60008060006060848603121561146657611465611292565b5b6000611474868287016112b8565b935050602061148586828701611438565b925050604061149686828701611438565b9150509250925092565b6000602082840312156114b6576114b5611292565b5b60006114c484828501611343565b91505092915050565b60006020820190506114e260008301846113bd565b92915050565b6114f181611411565b82525050565b600060408201905061150c60008301856114e8565b61151960208301846114e8565b9392505050565b611529816113b3565b82525050565b6060820160008201516115456000850182611520565b5060208201516115586020850182611520565b50604082015161156b6040850182611520565b50505050565b6000606082019050611586600083018461152f565b92915050565b600082825260208201905092915050565b7f4e4f545f414c4c4f574544000000000000000000000000000000000000000000600082015250565b60006115d3600b8361158c565b91506115de8261159d565b602082019050919050565b60006020820190508181036000830152611602816115c6565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061167282611297565b915061167d83611297565b92508261168d5761168c611609565b5b828204905092915050565b60006116a382611297565b91506116ae83611297565b92508282026116bc81611297565b915082820484148315176116d3576116d2611638565b5b5092915050565b6116e38161131a565b82525050565b6116f281611297565b82525050565b600060608201905061170d60008301866116da565b61171a60208301856116da565b61172760408301846116e9565b949350505050565b61173881611398565b811461174357600080fd5b50565b6000815190506117558161172f565b92915050565b60006020828403121561177157611770611292565b5b600061177f84828501611746565b91505092915050565b7f536f6d657468696e672077726f6e67207769746820746865207061796d656e7460008201527f2100000000000000000000000000000000000000000000000000000000000000602082015250565b60006117e460218361158c565b91506117ef82611788565b604082019050919050565b60006020820190508181036000830152611813816117d7565b9050919050565b7f4e6f7420656e6f75676820616d6f756e7420746f20706179206f757421000000600082015250565b6000611850601d8361158c565b915061185b8261181a565b602082019050919050565b6000602082019050818103600083015261187f81611843565b9050919050565b6000611891826113b3565b915061189c836113b3565b92508282026118aa816113b3565b91507f800000000000000000000000000000000000000000000000000000000000000084146000841216156118e2576118e1611638565b5b82820584148315176118f7576118f6611638565b5b5092915050565b6000611909826113b3565b9150611914836113b3565b92508261192457611923611609565b5b600160000383147f80000000000000000000000000000000000000000000000000000000000000008314161561195d5761195c611638565b5b828205905092915050565b6000611973826113b3565b915061197e836113b3565b9250828201905082811215600083121683821260008412151617156119a6576119a5611638565b5b92915050565b60006119b7826113b3565b91506119c2836113b3565b92508282039050818112600084121682821360008512151617156119e9576119e8611638565b5b92915050565b7f4f6e6c7920706f73697469766520616d6f756e742063616e206265207061796560008201527f64206f7574210000000000000000000000000000000000000000000000000000602082015250565b6000611a4b60268361158c565b9150611a56826119ef565b604082019050919050565b60006020820190508181036000830152611a7a81611a3e565b9050919050565b7f54686520616d6f756e7420697320626967676572207468656e2074686120706160008201527f7961626c65206469766964656e74210000000000000000000000000000000000602082015250565b6000611add602f8361158c565b9150611ae882611a81565b604082019050919050565b60006020820190508181036000830152611b0c81611ad0565b9050919050565b6000819050919050565b611b2681611b13565b82525050565b6000604082019050611b416000830185611b1d565b611b4e60208301846116da565b939250505056fea26469706673582212202987f865ab83f59da1ef0d6459ca22895598c9c9ba55351ad86f479c2fbc1b3f64736f6c63430008110033";

type ArexaPoolPNLFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ArexaPoolPNLFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ArexaPoolPNLFacet__factory extends ContractFactory {
  constructor(...args: ArexaPoolPNLFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ArexaPoolPNLFacet> {
    return super.deploy(overrides || {}) as Promise<ArexaPoolPNLFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ArexaPoolPNLFacet {
    return super.attach(address) as ArexaPoolPNLFacet;
  }
  override connect(signer: Signer): ArexaPoolPNLFacet__factory {
    return super.connect(signer) as ArexaPoolPNLFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ArexaPoolPNLFacetInterface {
    return new utils.Interface(_abi) as ArexaPoolPNLFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ArexaPoolPNLFacet {
    return new Contract(address, _abi, signerOrProvider) as ArexaPoolPNLFacet;
  }
}
