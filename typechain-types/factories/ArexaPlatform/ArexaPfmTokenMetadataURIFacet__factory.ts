/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  ArexaPfmTokenMetadataURIFacet,
  ArexaPfmTokenMetadataURIFacetInterface,
} from "../../ArexaPlatform/ArexaPfmTokenMetadataURIFacet";

const _abi = [
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "TargetedPausable__TargetedPaused",
    type: "error",
  },
  {
    inputs: [],
    name: "getTokenBaseUri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "getTokenUri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getUri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newuri",
        type: "string",
      },
    ],
    name: "setTokenBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "newuri",
        type: "string",
      },
    ],
    name: "setTokenURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newuri",
        type: "string",
      },
    ],
    name: "setURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061134a806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80634e16fc8b1161005b5780634e16fc8b146100ea5780638ad91345146101085780638ef79e9114610138578063b762fcfc146101545761007d565b806302fe5305146100825780630e89341c1461009e578063162094c4146100ce575b600080fd5b61009c60048036038101906100979190610d02565b610172565b005b6100b860048036038101906100b39190610d81565b610209565b6040516100c59190610e2d565b60405180910390f35b6100e860048036038101906100e39190610e4f565b610290565b005b6100f261035a565b6040516100ff9190610e2d565b60405180910390f35b610122600480360381019061011d9190610d81565b6103de565b60405161012f9190610e2d565b60405180910390f35b610152600480360381019061014d9190610d02565b610465565b005b61015c6104fc565b6040516101699190610e2d565b60405180910390f35b61017a610580565b73ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16146101e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101de90610ef7565b60405180910390fd5b6101ef6105b8565b6000801b6101fc81610626565b61020582610669565b5050565b6060610213610580565b73ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614610280576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027790610ef7565b60405180910390fd5b6102898261068b565b9050919050565b610298610580565b73ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614610305576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102fc90610ef7565b60405180910390fd5b61030d6105b8565b6000801b61031a81610626565b8260405160200161032b9190610f38565b6040516020818303038152906040528051906020012061034a81610626565b6103548484610805565b50505050565b6060610364610580565b73ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16146103d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103c890610ef7565b60405180910390fd5b6103d9610871565b905090565b60606103e8610580565b73ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614610455576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161044c90610ef7565b60405180910390fd5b61045e82610912565b9050919050565b61046d610580565b73ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16146104da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d190610ef7565b60405180910390fd5b6104e26105b8565b6000801b6104ef81610626565b6104f8826109c6565b5050565b6060610506610580565b73ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614610573576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056a90610ef7565b60405180910390fd5b61057b6109e8565b905090565b60008061058b610a89565b90508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b6105c0610ab6565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610624576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b61062f81610aee565b15610666576040517f2d0a436a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b6000610673610b21565b905081816007019081610686919061115f565b505050565b60606000610697610b21565b9050600081600901600085815260200190815260200160002080546106bb90610f82565b80601f01602080910402602001604051908101604052809291908181526020018280546106e790610f82565b80156107345780601f1061070957610100808354040283529160200191610734565b820191906000526020600020905b81548152906001019060200180831161071757829003601f168201915b5050505050905060008151116107d65781600701805461075390610f82565b80601f016020809104026020016040519081016040528092919081815260200182805461077f90610f82565b80156107cc5780601f106107a1576101008083540402835291602001916107cc565b820191906000526020600020905b8154815290600101906020018083116107af57829003601f168201915b50505050506107fc565b81600801816040516020016107ec9291906112f0565b6040516020818303038152906040525b92505050919050565b600061080f610b21565b9050818160090160008581526020019081526020016000209081610833919061115f565b50827f6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b836040516108649190610e2d565b60405180910390a2505050565b6060600061087d610b21565b905080600701805461088e90610f82565b80601f01602080910402602001604051908101604052809291908181526020018280546108ba90610f82565b80156109075780601f106108dc57610100808354040283529160200191610907565b820191906000526020600020905b8154815290600101906020018083116108ea57829003601f168201915b505050505091505090565b6060600061091e610b21565b9050806009016000848152602001908152602001600020805461094090610f82565b80601f016020809104026020016040519081016040528092919081815260200182805461096c90610f82565b80156109b95780601f1061098e576101008083540402835291602001916109b9565b820191906000526020600020905b81548152906001019060200180831161099c57829003601f168201915b5050505050915050919050565b60006109d0610b21565b9050818160080190816109e3919061115f565b505050565b606060006109f4610b21565b9050806008018054610a0590610f82565b80601f0160208091040260200160405190810160405280929190818152602001828054610a3190610f82565b8015610a7e5780601f10610a5357610100808354040283529160200191610a7e565b820191906000526020600020905b815481529060010190602001808311610a6157829003601f168201915b505050505091505090565b6000807ff72346055b4d7224c7ec19860d22963ca622fbb313761bfba507c1a3aeedf37290508091505090565b600080610ac1610b4e565b90508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b6000610af8610b7b565b600001600083815260200190815260200160002060009054906101000a900460ff169050919050565b6000807fe20f5a7f7e820e4505f9ef8ed1186e372d3490e37d8001618819927829be4e0590508091505090565b6000807f746c6723185dc95a8925081faed89cbd4670299390e2ebfb0b9c3e755e204ef490508091505090565b6000807fe8ceb94393aac3e803a9d4b376f7c5ffd7e8b6caab697212a5360c34a283caa190508091505090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610c0f82610bc6565b810181811067ffffffffffffffff82111715610c2e57610c2d610bd7565b5b80604052505050565b6000610c41610ba8565b9050610c4d8282610c06565b919050565b600067ffffffffffffffff821115610c6d57610c6c610bd7565b5b610c7682610bc6565b9050602081019050919050565b82818337600083830152505050565b6000610ca5610ca084610c52565b610c37565b905082815260208101848484011115610cc157610cc0610bc1565b5b610ccc848285610c83565b509392505050565b600082601f830112610ce957610ce8610bbc565b5b8135610cf9848260208601610c92565b91505092915050565b600060208284031215610d1857610d17610bb2565b5b600082013567ffffffffffffffff811115610d3657610d35610bb7565b5b610d4284828501610cd4565b91505092915050565b6000819050919050565b610d5e81610d4b565b8114610d6957600080fd5b50565b600081359050610d7b81610d55565b92915050565b600060208284031215610d9757610d96610bb2565b5b6000610da584828501610d6c565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610de8578082015181840152602081019050610dcd565b60008484015250505050565b6000610dff82610dae565b610e098185610db9565b9350610e19818560208601610dca565b610e2281610bc6565b840191505092915050565b60006020820190508181036000830152610e478184610df4565b905092915050565b60008060408385031215610e6657610e65610bb2565b5b6000610e7485828601610d6c565b925050602083013567ffffffffffffffff811115610e9557610e94610bb7565b5b610ea185828601610cd4565b9150509250929050565b7f4e4f545f414c4c4f574544000000000000000000000000000000000000000000600082015250565b6000610ee1600b83610db9565b9150610eec82610eab565b602082019050919050565b60006020820190508181036000830152610f1081610ed4565b9050919050565b6000819050919050565b610f32610f2d82610d4b565b610f17565b82525050565b6000610f448284610f21565b60208201915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610f9a57607f821691505b602082108103610fad57610fac610f53565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026110157fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610fd8565b61101f8683610fd8565b95508019841693508086168417925050509392505050565b6000819050919050565b600061105c61105761105284610d4b565b611037565b610d4b565b9050919050565b6000819050919050565b61107683611041565b61108a61108282611063565b848454610fe5565b825550505050565b600090565b61109f611092565b6110aa81848461106d565b505050565b5b818110156110ce576110c3600082611097565b6001810190506110b0565b5050565b601f821115611113576110e481610fb3565b6110ed84610fc8565b810160208510156110fc578190505b61111061110885610fc8565b8301826110af565b50505b505050565b600082821c905092915050565b600061113660001984600802611118565b1980831691505092915050565b600061114f8383611125565b9150826002028217905092915050565b61116882610dae565b67ffffffffffffffff81111561118157611180610bd7565b5b61118b8254610f82565b6111968282856110d2565b600060209050601f8311600181146111c957600084156111b7578287015190505b6111c18582611143565b865550611229565b601f1984166111d786610fb3565b60005b828110156111ff578489015182556001820191506020850194506020810190506111da565b8683101561121c5784890151611218601f891682611125565b8355505b6001600288020188555050505b505050505050565b600081905092915050565b6000815461124981610f82565b6112538186611231565b9450600182166000811461126e5760018114611283576112b6565b60ff19831686528115158202860193506112b6565b61128c85610fb3565b60005b838110156112ae5781548189015260018201915060208101905061128f565b838801955050505b50505092915050565b60006112ca82610dae565b6112d48185611231565b93506112e4818560208601610dca565b80840191505092915050565b60006112fc828561123c565b915061130882846112bf565b9150819050939250505056fea26469706673582212205aee79ca5eee68b8686283a8ab107b266033ef69b76a54679bfc1e12333d8d3564736f6c63430008110033";

type ArexaPfmTokenMetadataURIFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ArexaPfmTokenMetadataURIFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ArexaPfmTokenMetadataURIFacet__factory extends ContractFactory {
  constructor(...args: ArexaPfmTokenMetadataURIFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ArexaPfmTokenMetadataURIFacet> {
    return super.deploy(
      overrides || {}
    ) as Promise<ArexaPfmTokenMetadataURIFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ArexaPfmTokenMetadataURIFacet {
    return super.attach(address) as ArexaPfmTokenMetadataURIFacet;
  }
  override connect(signer: Signer): ArexaPfmTokenMetadataURIFacet__factory {
    return super.connect(signer) as ArexaPfmTokenMetadataURIFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ArexaPfmTokenMetadataURIFacetInterface {
    return new utils.Interface(_abi) as ArexaPfmTokenMetadataURIFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ArexaPfmTokenMetadataURIFacet {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ArexaPfmTokenMetadataURIFacet;
  }
}
