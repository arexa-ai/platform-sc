/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  ArexaAMLFacet,
  ArexaAMLFacetInterface,
} from "../../ArexaPlatform/ArexaAMLFacet";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "AccessDenied",
    type: "error",
  },
  {
    inputs: [],
    name: "TargetedPausable__TargetedPaused",
    type: "error",
  },
  {
    inputs: [],
    name: "MAGIC100_FIRST_BUYER",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_target",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "getAccountBlackWhiteList",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "getMagic100FirstBuyerWL",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_target",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_lockValue",
        type: "bool",
      },
    ],
    name: "setAccountBlackWhiteList",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_addresses",
        type: "address[]",
      },
      {
        internalType: "bool",
        name: "_lockValue",
        type: "bool",
      },
    ],
    name: "setBatchMagic100FirstBuyerWL",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_lockValue",
        type: "bool",
      },
    ],
    name: "setMagic100FirstBuyerWL",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610b68806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80634f80ad25146100675780636c19e58814610097578063775d832c146100b3578063be679d7c146100cf578063dbc0b2ba146100ff578063ffc063b91461011d575b600080fd5b610081600480360381019061007c919061077c565b610139565b60405161008e91906107d7565b60405180910390f35b6100b160048036038101906100ac919061081e565b61014d565b005b6100cd60048036038101906100c89190610871565b610196565b005b6100e960048036038101906100e491906108b1565b6101fe565b6040516100f691906107d7565b60405180910390f35b610107610231565b60405161011491906108ed565b60405180910390f35b6101376004803603810190610132919061096d565b610255565b005b6000610145838361034e565b905092915050565b6000801b61015a816103c4565b7f72a415ccbbed7752b009b01c3fad0a1694ff64e2a51c65a309c0517cd732d2d161018481610407565b61018f858585610414565b5050505050565b6000801b6101a3816103c4565b7f72a415ccbbed7752b009b01c3fad0a1694ff64e2a51c65a309c0517cd732d2d16101cd81610407565b6101f87f6d6775b5e502c1f5932b823e8901beec555ffec897aad6fd00846e01363884c88585610414565b50505050565b600061022a7f6d6775b5e502c1f5932b823e8901beec555ffec897aad6fd00846e01363884c88361034e565b9050919050565b7f6d6775b5e502c1f5932b823e8901beec555ffec897aad6fd00846e01363884c881565b6000801b610262816103c4565b7f72a415ccbbed7752b009b01c3fad0a1694ff64e2a51c65a309c0517cd732d2d161028c81610407565b60ff8585905011156102d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102ca90610a2a565b60405180910390fd5b60005b85859050811015610346576103337f6d6775b5e502c1f5932b823e8901beec555ffec897aad6fd00846e01363884c887878481811061031857610317610a4a565b5b905060200201602081019061032d91906108b1565b86610414565b808061033e90610ab2565b9150506102d6565b505050505050565b6000806103596104df565b905080600001600085815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1691505092915050565b6103cd8161050c565b15610404576040517f2d0a436a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b610411813361053f565b50565b600061041e6104df565b90508181600001600086815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508273ffffffffffffffffffffffffffffffffffffffff16847f696f1e09104a0bef7512faf461f1a6962c3c8151a4d5979d4fdfa5112fccc519846040516104d191906107d7565b60405180910390a350505050565b6000807f7fb8776fdb93079091f516133d7bb98c82f37f53f39f39f153c42a90e5e5891290508091505090565b6000610516610590565b600001600083815260200190815260200160002060009054906101000a900460ff169050919050565b61054982826105bd565b61058c5781816040517f521dcf0d000000000000000000000000000000000000000000000000000000008152600401610583929190610b09565b60405180910390fd5b5050565b6000807fe8ceb94393aac3e803a9d4b376f7c5ffd7e8b6caab697212a5360c34a283caa190508091505090565b6000806105c861065e565b9050610655838260010160008460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600087815260200190815260200160002060010161068b90919063ffffffff16565b91505092915050565b6000807f746c6723185dc95a8925081faed89cbd4670299390e2ebfb0b9c3e755e204ef490508091505090565b60006106b3836000018373ffffffffffffffffffffffffffffffffffffffff1660001b6106bb565b905092915050565b600080836001016000848152602001908152602001600020541415905092915050565b600080fd5b600080fd5b6000819050919050565b6106fb816106e8565b811461070657600080fd5b50565b600081359050610718816106f2565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107498261071e565b9050919050565b6107598161073e565b811461076457600080fd5b50565b60008135905061077681610750565b92915050565b60008060408385031215610793576107926106de565b5b60006107a185828601610709565b92505060206107b285828601610767565b9150509250929050565b60008115159050919050565b6107d1816107bc565b82525050565b60006020820190506107ec60008301846107c8565b92915050565b6107fb816107bc565b811461080657600080fd5b50565b600081359050610818816107f2565b92915050565b600080600060608486031215610837576108366106de565b5b600061084586828701610709565b935050602061085686828701610767565b925050604061086786828701610809565b9150509250925092565b60008060408385031215610888576108876106de565b5b600061089685828601610767565b92505060206108a785828601610809565b9150509250929050565b6000602082840312156108c7576108c66106de565b5b60006108d584828501610767565b91505092915050565b6108e7816106e8565b82525050565b600060208201905061090260008301846108de565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f84011261092d5761092c610908565b5b8235905067ffffffffffffffff81111561094a5761094961090d565b5b60208301915083602082028301111561096657610965610912565b5b9250929050565b600080600060408486031215610986576109856106de565b5b600084013567ffffffffffffffff8111156109a4576109a36106e3565b5b6109b086828701610917565b935093505060206109c386828701610809565b9150509250925092565b600082825260208201905092915050565b7f42617463683a20746f6f206d616e792061646472657373657300000000000000600082015250565b6000610a146019836109cd565b9150610a1f826109de565b602082019050919050565b60006020820190508181036000830152610a4381610a07565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000819050919050565b6000610abd82610aa8565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610aef57610aee610a79565b5b600182019050919050565b610b038161073e565b82525050565b6000604082019050610b1e60008301856108de565b610b2b6020830184610afa565b939250505056fea2646970667358221220c04957d4d6a45c2f3386b6fd1717d7256b4181abe33dc15e0ca96c13baa1107f64736f6c63430008110033";

type ArexaAMLFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ArexaAMLFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ArexaAMLFacet__factory extends ContractFactory {
  constructor(...args: ArexaAMLFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ArexaAMLFacet> {
    return super.deploy(overrides || {}) as Promise<ArexaAMLFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ArexaAMLFacet {
    return super.attach(address) as ArexaAMLFacet;
  }
  override connect(signer: Signer): ArexaAMLFacet__factory {
    return super.connect(signer) as ArexaAMLFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ArexaAMLFacetInterface {
    return new utils.Interface(_abi) as ArexaAMLFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ArexaAMLFacet {
    return new Contract(address, _abi, signerOrProvider) as ArexaAMLFacet;
  }
}
