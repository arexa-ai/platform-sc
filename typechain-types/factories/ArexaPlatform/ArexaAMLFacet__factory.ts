/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  ArexaAMLFacet,
  ArexaAMLFacetInterface,
} from "../../ArexaPlatform/ArexaAMLFacet";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "AccessDenied",
    type: "error",
  },
  {
    inputs: [],
    name: "TargetedPausable__TargetedPaused",
    type: "error",
  },
  {
    inputs: [],
    name: "MAGIC100_FIRST_BUYER",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "target",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getAccountBlackWhiteList",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getMagic100FirstBuyerWL",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "target",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "bool",
        name: "lockValue",
        type: "bool",
      },
    ],
    name: "setAccountBlackWhiteList",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "addresses",
        type: "address[]",
      },
      {
        internalType: "bool",
        name: "lockValue",
        type: "bool",
      },
    ],
    name: "setBatchMagic100FirstBuyerWL",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "bool",
        name: "lockValue",
        type: "bool",
      },
    ],
    name: "setMagic100FirstBuyerWL",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610e82806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80634f80ad25146100675780636c19e58814610097578063775d832c146100b3578063be679d7c146100cf578063dbc0b2ba146100ff578063ffc063b91461011d575b600080fd5b610081600480360381019061007c9190610a2a565b610139565b60405161008e9190610a85565b60405180910390f35b6100b160048036038101906100ac9190610acc565b6101c2565b005b6100cd60048036038101906100c89190610b1f565b610280565b005b6100e960048036038101906100e49190610b5f565b61035d565b6040516100f69190610a85565b60405180910390f35b610107610405565b6040516101149190610b9b565b60405180910390f35b61013760048036038101906101329190610c1b565b610429565b005b6000610143610597565b73ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16146101b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101a790610cd8565b60405180910390fd5b6101ba83836105cf565b905092915050565b6101ca610597565b73ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614610237576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022e90610cd8565b60405180910390fd5b6000801b61024481610645565b7f72a415ccbbed7752b009b01c3fad0a1694ff64e2a51c65a309c0517cd732d2d161026e81610688565b610279858585610695565b5050505050565b610288610597565b73ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16146102f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102ec90610cd8565b60405180910390fd5b6000801b61030281610645565b7f72a415ccbbed7752b009b01c3fad0a1694ff64e2a51c65a309c0517cd732d2d161032c81610688565b6103577f6d6775b5e502c1f5932b823e8901beec555ffec897aad6fd00846e01363884c88585610695565b50505050565b6000610367610597565b73ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16146103d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103cb90610cd8565b60405180910390fd5b6103fe7f6d6775b5e502c1f5932b823e8901beec555ffec897aad6fd00846e01363884c8836105cf565b9050919050565b7f6d6775b5e502c1f5932b823e8901beec555ffec897aad6fd00846e01363884c881565b610431610597565b73ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff161461049e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049590610cd8565b60405180910390fd5b6000801b6104ab81610645565b7f72a415ccbbed7752b009b01c3fad0a1694ff64e2a51c65a309c0517cd732d2d16104d581610688565b60ff85859050111561051c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051390610d44565b60405180910390fd5b60005b8585905081101561058f5761057c7f6d6775b5e502c1f5932b823e8901beec555ffec897aad6fd00846e01363884c887878481811061056157610560610d64565b5b90506020020160208101906105769190610b5f565b86610695565b808061058790610dcc565b91505061051f565b505050505050565b6000806105a2610760565b90508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b6000806105da61078d565b905080600001600085815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1691505092915050565b61064e816107ba565b15610685576040517f2d0a436a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b61069281336107ed565b50565b600061069f61078d565b90508181600001600086815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508273ffffffffffffffffffffffffffffffffffffffff16847f696f1e09104a0bef7512faf461f1a6962c3c8151a4d5979d4fdfa5112fccc519846040516107529190610a85565b60405180910390a350505050565b6000807ff72346055b4d7224c7ec19860d22963ca622fbb313761bfba507c1a3aeedf37290508091505090565b6000807f7fb8776fdb93079091f516133d7bb98c82f37f53f39f39f153c42a90e5e5891290508091505090565b60006107c461083e565b600001600083815260200190815260200160002060009054906101000a900460ff169050919050565b6107f7828261086b565b61083a5781816040517f521dcf0d000000000000000000000000000000000000000000000000000000008152600401610831929190610e23565b60405180910390fd5b5050565b6000807fe8ceb94393aac3e803a9d4b376f7c5ffd7e8b6caab697212a5360c34a283caa190508091505090565b60008061087661090c565b9050610903838260010160008460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600087815260200190815260200160002060010161093990919063ffffffff16565b91505092915050565b6000807f746c6723185dc95a8925081faed89cbd4670299390e2ebfb0b9c3e755e204ef490508091505090565b6000610961836000018373ffffffffffffffffffffffffffffffffffffffff1660001b610969565b905092915050565b600080836001016000848152602001908152602001600020541415905092915050565b600080fd5b600080fd5b6000819050919050565b6109a981610996565b81146109b457600080fd5b50565b6000813590506109c6816109a0565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006109f7826109cc565b9050919050565b610a07816109ec565b8114610a1257600080fd5b50565b600081359050610a24816109fe565b92915050565b60008060408385031215610a4157610a4061098c565b5b6000610a4f858286016109b7565b9250506020610a6085828601610a15565b9150509250929050565b60008115159050919050565b610a7f81610a6a565b82525050565b6000602082019050610a9a6000830184610a76565b92915050565b610aa981610a6a565b8114610ab457600080fd5b50565b600081359050610ac681610aa0565b92915050565b600080600060608486031215610ae557610ae461098c565b5b6000610af3868287016109b7565b9350506020610b0486828701610a15565b9250506040610b1586828701610ab7565b9150509250925092565b60008060408385031215610b3657610b3561098c565b5b6000610b4485828601610a15565b9250506020610b5585828601610ab7565b9150509250929050565b600060208284031215610b7557610b7461098c565b5b6000610b8384828501610a15565b91505092915050565b610b9581610996565b82525050565b6000602082019050610bb06000830184610b8c565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112610bdb57610bda610bb6565b5b8235905067ffffffffffffffff811115610bf857610bf7610bbb565b5b602083019150836020820283011115610c1457610c13610bc0565b5b9250929050565b600080600060408486031215610c3457610c3361098c565b5b600084013567ffffffffffffffff811115610c5257610c51610991565b5b610c5e86828701610bc5565b93509350506020610c7186828701610ab7565b9150509250925092565b600082825260208201905092915050565b7f4e4f545f414c4c4f574544000000000000000000000000000000000000000000600082015250565b6000610cc2600b83610c7b565b9150610ccd82610c8c565b602082019050919050565b60006020820190508181036000830152610cf181610cb5565b9050919050565b7f42617463683a20746f6f206d616e792061646472657373657300000000000000600082015250565b6000610d2e601983610c7b565b9150610d3982610cf8565b602082019050919050565b60006020820190508181036000830152610d5d81610d21565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000819050919050565b6000610dd782610dc2565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610e0957610e08610d93565b5b600182019050919050565b610e1d816109ec565b82525050565b6000604082019050610e386000830185610b8c565b610e456020830184610e14565b939250505056fea26469706673582212207e81ffe4fcd9f7ba10331cdb174120847526fc1bb43ffc97d82cba52acd5e0b664736f6c63430008110033";

type ArexaAMLFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ArexaAMLFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ArexaAMLFacet__factory extends ContractFactory {
  constructor(...args: ArexaAMLFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ArexaAMLFacet> {
    return super.deploy(overrides || {}) as Promise<ArexaAMLFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ArexaAMLFacet {
    return super.attach(address) as ArexaAMLFacet;
  }
  override connect(signer: Signer): ArexaAMLFacet__factory {
    return super.connect(signer) as ArexaAMLFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ArexaAMLFacetInterface {
    return new utils.Interface(_abi) as ArexaAMLFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ArexaAMLFacet {
    return new Contract(address, _abi, signerOrProvider) as ArexaAMLFacet;
  }
}
