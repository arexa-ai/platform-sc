/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  ArexaPausableFacet,
  ArexaPausableFacetInterface,
} from "../../ArexaPlatform/ArexaPausableFacet";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "AccessDenied",
    type: "error",
  },
  {
    inputs: [],
    name: "TargetedPausable__NotTargetedPaused",
    type: "error",
  },
  {
    inputs: [],
    name: "TargetedPausable__TargetedPaused",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "AllTokenPaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "AllTokenUnpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "TokenPaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "TokenUnpaused",
    type: "event",
  },
  {
    inputs: [],
    name: "PAUSABLE_AREXA_TOKEN",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PAUSABLE_FULL",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PAUSABLE_MAGIC_TOKEN",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PAUSABLE_SUBSCR1_TOKEN",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PAUSABLE_SUBSCR2_TOKEN",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PAUSABLE_TRADER_TOKEN",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "target",
        type: "bytes32",
      },
    ],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "pauseAllToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "pauseToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "target",
        type: "bytes32",
      },
    ],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "target",
        type: "bytes32",
      },
    ],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpauseAllToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "unpauseToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506114b5806100206000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80639e9e46661161008c578063c676cdc111610066578063c676cdc1146101c8578063ed56531a146101e6578063f33b89e514610202578063fbd395f814610220576100cf565b80639e9e46661461015c578063a0dcbb031461018c578063a4e8f699146101aa576100cf565b80632f4dae9f146100d45780634793c498146100f0578063595390251461010e578063776ab6341461012c5780637980d957146101485780637badc7c114610152575b600080fd5b6100ee60048036038101906100e9919061106f565b61023c565b005b6100f86102f4565b60405161010591906110ab565b60405180910390f35b610116610322565b60405161012391906110ab565b60405180910390f35b610146600480360381019061014191906110fc565b610350565b005b61015061040b565b005b61015a6104c4565b005b6101766004803603810190610171919061106f565b61057d565b6040516101839190611144565b60405180910390f35b610194610604565b6040516101a191906110ab565b60405180910390f35b6101b2610632565b6040516101bf91906110ab565b60405180910390f35b6101d0610639565b6040516101dd91906110ab565b60405180910390f35b61020060048036038101906101fb919061106f565b610667565b005b61020a61071f565b60405161021791906110ab565b60405180910390f35b61023a600480360381019061023591906110fc565b61074d565b005b610244610808565b73ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16146102b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102a8906111bc565b60405180910390fd5b806102bb81610840565b7f72a415ccbbed7752b009b01c3fad0a1694ff64e2a51c65a309c0517cd732d2d16102e581610882565b6102ef833361088f565b505050565b630bebc2006040516020016103099190611237565b6040516020818303038152906040528051906020012081565b631dcd65006040516020016103379190611237565b6040516020818303038152906040528051906020012081565b610358610808565b73ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16146103c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103bc906111bc565b60405180910390fd5b6000801b6103d28161099a565b7f72a415ccbbed7752b009b01c3fad0a1694ff64e2a51c65a309c0517cd732d2d16103fc81610882565b61040633846109dd565b505050565b610413610808565b73ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614610480576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610477906111bc565b60405180910390fd5b6000801b61048d8161099a565b7f72a415ccbbed7752b009b01c3fad0a1694ff64e2a51c65a309c0517cd732d2d16104b781610882565b6104c033610ac2565b5050565b6104cc610808565b73ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614610539576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610530906111bc565b60405180910390fd5b6000801b6105468161099a565b7f72a415ccbbed7752b009b01c3fad0a1694ff64e2a51c65a309c0517cd732d2d161057081610882565b61057933610b84565b5050565b6000610587610808565b73ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16146105f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105eb906111bc565b60405180910390fd5b6105fd82610c45565b9050919050565b6317d784006040516020016106199190611237565b6040516020818303038152906040528051906020012081565b6000801b81565b6305f5e10060405160200161064e9190611237565b6040516020818303038152906040528051906020012081565b61066f610808565b73ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16146106dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d3906111bc565b60405180910390fd5b806106e68161099a565b7f72a415ccbbed7752b009b01c3fad0a1694ff64e2a51c65a309c0517cd732d2d161071081610882565b61071a8333610c78565b505050565b6311e1a3006040516020016107349190611237565b6040516020818303038152906040528051906020012081565b610755610808565b73ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16146107c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b9906111bc565b60405180910390fd5b6000801b6107cf8161099a565b7f72a415ccbbed7752b009b01c3fad0a1694ff64e2a51c65a309c0517cd732d2d16107f981610882565b6108033384610d55565b505050565b600080610813610e3b565b90508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b61084981610c45565b61087f576040517f2ff32e2400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b61088c8133610e68565b50565b6000610899610eb9565b905080600001600084815260200190815260200160002060009054906101000a900460ff166108f4576040517f2ff32e2400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600081600001600085815260200190815260200160002060006101000a81548160ff02191690831515021790555080600001600084815260200190815260200160002060006101000a81549060ff02191690558173ffffffffffffffffffffffffffffffffffffffff167f586bd8e235751dfbced6dca3e1bf08b2d68cf19c2f502b0c4abf61280a1793aa8460405161098d91906110ab565b60405180910390a2505050565b6109a381610c45565b156109da576040517f2d0a436a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b60006109e7610ee6565b905080600b01600083815260200190815260200160002060009054906101000a900460ff16610a4b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a42906112b1565b60405180910390fd5b600081600b01600084815260200190815260200160002060006101000a81548160ff021916908315150217905550818373ffffffffffffffffffffffffffffffffffffffff167f9db9e80f56a6219278c09b5683f265be968540b2e4d3c07303262ff72916ad7860405160405180910390a3505050565b6000610acc610ee6565b905080600a0160009054906101000a900460ff1615610b20576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b179061131d565b60405180910390fd5b600181600a0160006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167f703069bce051c97389ec0bdf63b01d3f5710db23f5f37aed683e7b15e218a5f660405160405180910390a25050565b6000610b8e610ee6565b905080600a0160009054906101000a900460ff16610be1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bd890611389565b60405180910390fd5b600081600a0160006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167f3afa8a905cd0f2190c890b78362507ef20599bd0b50747caaca2f6a2148563df60405160405180910390a25050565b6000610c4f610eb9565b600001600083815260200190815260200160002060009054906101000a900460ff169050919050565b6000610c82610eb9565b905080600001600084815260200190815260200160002060009054906101000a900460ff1615610cde576040517f2d0a436a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600181600001600085815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16837fa4ee980acf45d6dea10fa511fd580be7a6ec548bfd60e2dfba4f318fd40b4eff60405160405180910390a3505050565b6000610d5f610ee6565b905080600b01600083815260200190815260200160002060009054906101000a900460ff1615610dc4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dbb906113f5565b60405180910390fd5b600181600b01600084815260200190815260200160002060006101000a81548160ff021916908315150217905550818373ffffffffffffffffffffffffffffffffffffffff167f8622310c27420d43447724ef64e214ebf86405b8e9f149480fb03111f811e51960405160405180910390a3505050565b6000807ff72346055b4d7224c7ec19860d22963ca622fbb313761bfba507c1a3aeedf37290508091505090565b610e728282610f13565b610eb55781816040517f521dcf0d000000000000000000000000000000000000000000000000000000008152600401610eac929190611456565b60405180910390fd5b5050565b6000807fe8ceb94393aac3e803a9d4b376f7c5ffd7e8b6caab697212a5360c34a283caa190508091505090565b6000807fe20f5a7f7e820e4505f9ef8ed1186e372d3490e37d8001618819927829be4e0590508091505090565b600080610f1e610fb4565b9050610fab838260010160008460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000878152602001908152602001600020600101610fe190919063ffffffff16565b91505092915050565b6000807f746c6723185dc95a8925081faed89cbd4670299390e2ebfb0b9c3e755e204ef490508091505090565b6000611009836000018373ffffffffffffffffffffffffffffffffffffffff1660001b611011565b905092915050565b600080836001016000848152602001908152602001600020541415905092915050565b600080fd5b6000819050919050565b61104c81611039565b811461105757600080fd5b50565b60008135905061106981611043565b92915050565b60006020828403121561108557611084611034565b5b60006110938482850161105a565b91505092915050565b6110a581611039565b82525050565b60006020820190506110c0600083018461109c565b92915050565b6000819050919050565b6110d9816110c6565b81146110e457600080fd5b50565b6000813590506110f6816110d0565b92915050565b60006020828403121561111257611111611034565b5b6000611120848285016110e7565b91505092915050565b60008115159050919050565b61113e81611129565b82525050565b60006020820190506111596000830184611135565b92915050565b600082825260208201905092915050565b7f4e4f545f414c4c4f574544000000000000000000000000000000000000000000600082015250565b60006111a6600b8361115f565b91506111b182611170565b602082019050919050565b600060208201905081810360008301526111d581611199565b9050919050565b7f544f4b454e000000000000000000000000000000000000000000000000000000600082015250565b600061121260058361115f565b915061121d826111dc565b602082019050919050565b611231816110c6565b82525050565b6000604082019050818103600083015261125081611205565b905061125f6020830184611228565b92915050565b7f546f6b656e206973206e6f742070617573656420796574000000000000000000600082015250565b600061129b60178361115f565b91506112a682611265565b602082019050919050565b600060208201905081810360008301526112ca8161128e565b9050919050565b7f416c6c20746f6b656e732061726520616c726561647920706175736564000000600082015250565b6000611307601d8361115f565b9150611312826112d1565b602082019050919050565b60006020820190508181036000830152611336816112fa565b9050919050565b7f416c6c20746f6b656e7320617265206e6f742070617573656420796574000000600082015250565b6000611373601d8361115f565b915061137e8261133d565b602082019050919050565b600060208201905081810360008301526113a281611366565b9050919050565b7f546f6b656e20697320616c726561647920706175736564000000000000000000600082015250565b60006113df60178361115f565b91506113ea826113a9565b602082019050919050565b6000602082019050818103600083015261140e816113d2565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061144082611415565b9050919050565b61145081611435565b82525050565b600060408201905061146b600083018561109c565b6114786020830184611447565b939250505056fea2646970667358221220d82c66b70d10134bd8ca1bf8a367b6196c2ac0a36d82e9647c2a1736a9087fe364736f6c63430008110033";

type ArexaPausableFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ArexaPausableFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ArexaPausableFacet__factory extends ContractFactory {
  constructor(...args: ArexaPausableFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ArexaPausableFacet> {
    return super.deploy(overrides || {}) as Promise<ArexaPausableFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ArexaPausableFacet {
    return super.attach(address) as ArexaPausableFacet;
  }
  override connect(signer: Signer): ArexaPausableFacet__factory {
    return super.connect(signer) as ArexaPausableFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ArexaPausableFacetInterface {
    return new utils.Interface(_abi) as ArexaPausableFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ArexaPausableFacet {
    return new Contract(address, _abi, signerOrProvider) as ArexaPausableFacet;
  }
}
