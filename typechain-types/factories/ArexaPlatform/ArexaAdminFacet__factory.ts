/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  ArexaAdminFacet,
  ArexaAdminFacetInterface,
} from "../../ArexaPlatform/ArexaAdminFacet";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "AccessDenied",
    type: "error",
  },
  {
    inputs: [],
    name: "TargetedPausable__TargetedPaused",
    type: "error",
  },
  {
    inputs: [],
    name: "getArexaERC20Token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPayingToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
    ],
    name: "setPayingToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061088a806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80630848818b146100465780635ddb39de146100625780639de34b3b14610080575b600080fd5b610060600480360381019061005b919061064d565b61009e565b005b61006a610159565b60405161007791906106d9565b60405180910390f35b6100886101dd565b60405161009591906106d9565b60405180910390f35b6000801b6100ab81610261565b7f72a415ccbbed7752b009b01c3fad0a1694ff64e2a51c65a309c0517cd732d2d16100d5816102a4565b600073ffffffffffffffffffffffffffffffffffffffff166100f56102b1565b73ffffffffffffffffffffffffffffffffffffffff161461014b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014290610777565b60405180910390fd5b610154836102e9565b505050565b600061016361033c565b73ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16146101d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101c7906107e3565b60405180910390fd5b6101d8610374565b905090565b60006101e761033c565b73ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614610254576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024b906107e3565b60405180910390fd5b61025c6102b1565b905090565b61026a816103ac565b156102a1576040517f2d0a436a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b6102ae81336103df565b50565b6000806102bc610430565b90508060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b60006102f3610430565b9050818160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60008061034761045d565b90508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b60008061037f610430565b90508060060160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b60006103b661048a565b600001600083815260200190815260200160002060009054906101000a900460ff169050919050565b6103e982826104b7565b61042c5781816040517f521dcf0d00000000000000000000000000000000000000000000000000000000815260040161042392919061082b565b60405180910390fd5b5050565b6000807f1a2f703e435318ee39feac62abda44020ca215505d5ba3284195182c842a2d3090508091505090565b6000807ff72346055b4d7224c7ec19860d22963ca622fbb313761bfba507c1a3aeedf37290508091505090565b6000807fe8ceb94393aac3e803a9d4b376f7c5ffd7e8b6caab697212a5360c34a283caa190508091505090565b6000806104c2610558565b905061054f838260010160008460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600087815260200190815260200160002060010161058590919063ffffffff16565b91505092915050565b6000807f746c6723185dc95a8925081faed89cbd4670299390e2ebfb0b9c3e755e204ef490508091505090565b60006105ad836000018373ffffffffffffffffffffffffffffffffffffffff1660001b6105b5565b905092915050565b600080836001016000848152602001908152602001600020541415905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610608826105dd565b9050919050565b600061061a826105fd565b9050919050565b61062a8161060f565b811461063557600080fd5b50565b60008135905061064781610621565b92915050565b600060208284031215610663576106626105d8565b5b600061067184828501610638565b91505092915050565b6000819050919050565b600061069f61069a610695846105dd565b61067a565b6105dd565b9050919050565b60006106b182610684565b9050919050565b60006106c3826106a6565b9050919050565b6106d3816106b8565b82525050565b60006020820190506106ee60008301846106ca565b92915050565b600082825260208201905092915050565b7f43757272656e746c79206368616e67696e67207061796d656e7420746f6b656e60008201527f206973206e6f74207065726d69747465642e0000000000000000000000000000602082015250565b60006107616032836106f4565b915061076c82610705565b604082019050919050565b6000602082019050818103600083015261079081610754565b9050919050565b7f4e4f545f414c4c4f574544000000000000000000000000000000000000000000600082015250565b60006107cd600b836106f4565b91506107d882610797565b602082019050919050565b600060208201905081810360008301526107fc816107c0565b9050919050565b6000819050919050565b61081681610803565b82525050565b610825816105fd565b82525050565b6000604082019050610840600083018561080d565b61084d602083018461081c565b939250505056fea26469706673582212204005bc071accf12d09f7255c0351f02002ed6075cef82bfaead5fdfcafb8cddc64736f6c63430008110033";

type ArexaAdminFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ArexaAdminFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ArexaAdminFacet__factory extends ContractFactory {
  constructor(...args: ArexaAdminFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ArexaAdminFacet> {
    return super.deploy(overrides || {}) as Promise<ArexaAdminFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ArexaAdminFacet {
    return super.attach(address) as ArexaAdminFacet;
  }
  override connect(signer: Signer): ArexaAdminFacet__factory {
    return super.connect(signer) as ArexaAdminFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ArexaAdminFacetInterface {
    return new utils.Interface(_abi) as ArexaAdminFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ArexaAdminFacet {
    return new Contract(address, _abi, signerOrProvider) as ArexaAdminFacet;
  }
}
