/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  DiamondEtherscanFacet,
  DiamondEtherscanFacetInterface,
} from "../../DiamondFacets/DiamondEtherscanFacet";

const _abi = [
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "implementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_implementation",
        type: "address",
      },
    ],
    name: "setDummyImplementation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610363806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80635c60da1b1461003b578063c39aa07d14610059575b600080fd5b610043610075565b60405161005091906102b4565b60405180910390f35b610073600480360381019061006e9190610300565b610084565b005b600061007f610098565b905090565b61008c6100d0565b610095816100da565b50565b6000806100a3610170565b90508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b6100d86101a0565b565b60006100e4610170565b9050818160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a25050565b6000807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b90508091505090565b6101a861020e565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461020c576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b600080610219610246565b90508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b6000807f746c6723185dc95a8925081faed89cbd4670299390e2ebfb0b9c3e755e204ef490508091505090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061029e82610273565b9050919050565b6102ae81610293565b82525050565b60006020820190506102c960008301846102a5565b92915050565b600080fd5b6102dd81610293565b81146102e857600080fd5b50565b6000813590506102fa816102d4565b92915050565b600060208284031215610316576103156102cf565b5b6000610324848285016102eb565b9150509291505056fea26469706673582212204c0fbc23890eda2f650375e448e1ac48a5bafc917871dc816af610d93e5e341e64736f6c63430008110033";

type DiamondEtherscanFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DiamondEtherscanFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DiamondEtherscanFacet__factory extends ContractFactory {
  constructor(...args: DiamondEtherscanFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DiamondEtherscanFacet> {
    return super.deploy(overrides || {}) as Promise<DiamondEtherscanFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DiamondEtherscanFacet {
    return super.attach(address) as DiamondEtherscanFacet;
  }
  override connect(signer: Signer): DiamondEtherscanFacet__factory {
    return super.connect(signer) as DiamondEtherscanFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DiamondEtherscanFacetInterface {
    return new utils.Interface(_abi) as DiamondEtherscanFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DiamondEtherscanFacet {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as DiamondEtherscanFacet;
  }
}
