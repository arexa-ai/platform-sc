/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  DiamondCutFacet,
  DiamondCutFacetInterface,
} from "../../DiamondFacets/DiamondCutFacet";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_initializationContractAddress",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_calldata",
        type: "bytes",
      },
    ],
    name: "InitializationFunctionReverted",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "facetAddress",
            type: "address",
          },
          {
            internalType: "enum IDiamondCut.FacetCutAction",
            name: "action",
            type: "uint8",
          },
          {
            internalType: "bytes4[]",
            name: "functionSelectors",
            type: "bytes4[]",
          },
        ],
        indexed: false,
        internalType: "struct IDiamondCut.FacetCut[]",
        name: "_diamondCut",
        type: "tuple[]",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_init",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "_calldata",
        type: "bytes",
      },
    ],
    name: "DiamondCut",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "facetAddress",
            type: "address",
          },
          {
            internalType: "enum IDiamondCut.FacetCutAction",
            name: "action",
            type: "uint8",
          },
          {
            internalType: "bytes4[]",
            name: "functionSelectors",
            type: "bytes4[]",
          },
        ],
        internalType: "struct IDiamondCut.FacetCut[]",
        name: "_diamondCut",
        type: "tuple[]",
      },
      {
        internalType: "address",
        name: "_init",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_calldata",
        type: "bytes",
      },
    ],
    name: "diamondCut",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50612444806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80631f931c1c14610030575b600080fd5b61004a600480360381019061004591906115fd565b61004c565b005b6100546100b6565b6100af858590610064919061199b565b8484848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506100c0565b5050505050565b6100be6102ef565b565b60005b83518110156102a45760008482815181106100e1576100e06119b0565b5b602002602001015160200151905060006002811115610103576101026119df565b5b816002811115610116576101156119df565b5b0361016657610161858381518110610131576101306119b0565b5b6020026020010151600001518684815181106101505761014f6119b0565b5b60200260200101516040015161035d565b610290565b6001600281111561017a576101796119df565b5b81600281111561018d5761018c6119df565b5b036101dd576101d88583815181106101a8576101a76119b0565b5b6020026020010151600001518684815181106101c7576101c66119b0565b5b6020026020010151604001516105d4565b61028f565b6002808111156101f0576101ef6119df565b5b816002811115610203576102026119df565b5b036102535761024e85838151811061021e5761021d6119b0565b5b60200260200101516000015186848151811061023d5761023c6119b0565b5b602002602001015160400151610855565b61028e565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161028590611a91565b60405180910390fd5b5b5b50808061029c90611aea565b9150506100c3565b507f8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb6738383836040516102d893929190611de7565b60405180910390a16102ea82826109e0565b505050565b6102f7610b02565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461035b576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b60008151116103a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039890611e9e565b60405180910390fd5b60006103ab610b3a565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361041c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041390611f30565b60405180910390fd5b60008160020160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018054905090506000816bffffffffffffffffffffffff1603610489576104888285610b67565b5b60005b83518110156105cd5760008482815181106104aa576104a96119b0565b5b602002602001015190506000846001016000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461059e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059590611fc2565b60405180910390fd5b6105aa8583868a610c42565b83806105b590611ffa565b945050505080806105c590611aea565b91505061048c565b5050505050565b6000815111610618576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060f90611e9e565b60405180910390fd5b6000610622610b3a565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610693576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068a90611f30565b60405180910390fd5b60008160020160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018054905090506000816bffffffffffffffffffffffff1603610700576106ff8285610b67565b5b60005b835181101561084e576000848281518110610721576107206119b0565b5b602002602001015190506000846001016000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610814576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161080b906120a0565b60405180910390fd5b61081f858284610def565b61082b8583868a610c42565b838061083690611ffa565b9450505050808061084690611aea565b915050610703565b5050505050565b6000815111610899576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089090611e9e565b60405180910390fd5b60006108a3610b3a565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610914576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090b90612132565b60405180910390fd5b60005b82518110156109da576000838281518110610935576109346119b0565b5b602002602001015190506000836001016000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506109c5848284610def565b505080806109d290611aea565b915050610917565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160315610afe57610a37826040518060600160405280602881526020016123c360289139611451565b6000808373ffffffffffffffffffffffffffffffffffffffff1683604051610a5f919061218e565b600060405180830381855af49150503d8060008114610a9a576040519150601f19603f3d011682016040523d82523d6000602084013e610a9f565b606091505b509150915081610afb57600081511115610abc5780518082602001fd5b83836040517f192105d7000000000000000000000000000000000000000000000000000000008152600401610af29291906121a5565b60405180910390fd5b50505b5050565b600080610b0d6114a3565b90508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b6000807ff72346055b4d7224c7ec19860d22963ca622fbb313761bfba507c1a3aeedf37290508091505090565b610b89816040518060600160405280602481526020016123eb60249139611451565b81600301805490508260020160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018190555081600301819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b81846001016000857bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060000160146101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff1602179055508360020160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018390806001815401808255809150506001900390600052602060002090600891828204019190066004029091909190916101000a81548163ffffffff021916908360e01c021790555080846001016000857bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610e5e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e5590612247565b60405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ecc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ec3906122d9565b60405180910390fd5b6000836001016000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060000160149054906101000a90046bffffffffffffffffffffffff166bffffffffffffffffffffffff169050600060018560020160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000180549050610fa391906122f9565b90508082146111375760008560020160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018281548110611004576110036119b0565b5b90600052602060002090600891828204019190066004029054906101000a900460e01b9050808660020160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000184815481106110805761107f6119b0565b5b90600052602060002090600891828204019190066004026101000a81548163ffffffff021916908360e01c021790555082866001016000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060000160146101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff160217905550505b8460020160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000180548061118b5761118a61232d565b5b60019003818190600052602060002090600891828204019190066004026101000a81549063ffffffff02191690559055846001016000847bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556000820160146101000a8154906bffffffffffffffffffffffff021916905550506000810361144a5760006001866003018054905061127591906122f9565b905060008660020160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015490508181146113b65760008760030183815481106112df576112de6119b0565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905080886003018381548110611323576113226119b0565b5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818860020160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010181905550505b866003018054806113ca576113c961232d565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905590558660020160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016000905550505b5050505050565b6000823b905060008111829061149d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161149491906123a0565b60405180910390fd5b50505050565b6000807f746c6723185dc95a8925081faed89cbd4670299390e2ebfb0b9c3e755e204ef490508091505090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f840112611509576115086114e4565b5b8235905067ffffffffffffffff811115611526576115256114e9565b5b602083019150836020820283011115611542576115416114ee565b5b9250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061157482611549565b9050919050565b61158481611569565b811461158f57600080fd5b50565b6000813590506115a18161157b565b92915050565b60008083601f8401126115bd576115bc6114e4565b5b8235905067ffffffffffffffff8111156115da576115d96114e9565b5b6020830191508360018202830111156115f6576115f56114ee565b5b9250929050565b600080600080600060608688031215611619576116186114da565b5b600086013567ffffffffffffffff811115611637576116366114df565b5b611643888289016114f3565b9550955050602061165688828901611592565b935050604086013567ffffffffffffffff811115611677576116766114df565b5b611683888289016115a7565b92509250509295509295909350565b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6116db82611692565b810181811067ffffffffffffffff821117156116fa576116f96116a3565b5b80604052505050565b600061170d6114d0565b905061171982826116d2565b919050565b600067ffffffffffffffff821115611739576117386116a3565b5b602082029050602081019050919050565b600080fd5b600080fd5b6003811061176157600080fd5b50565b60008135905061177381611754565b92915050565b600067ffffffffffffffff821115611794576117936116a3565b5b602082029050602081019050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6117da816117a5565b81146117e557600080fd5b50565b6000813590506117f7816117d1565b92915050565b600061181061180b84611779565b611703565b90508083825260208201905060208402830185811115611833576118326114ee565b5b835b8181101561185c578061184888826117e8565b845260208401935050602081019050611835565b5050509392505050565b600082601f83011261187b5761187a6114e4565b5b813561188b8482602086016117fd565b91505092915050565b6000606082840312156118aa576118a961174a565b5b6118b46060611703565b905060006118c484828501611592565b60008301525060206118d884828501611764565b602083015250604082013567ffffffffffffffff8111156118fc576118fb61174f565b5b61190884828501611866565b60408301525092915050565b60006119276119228461171e565b611703565b9050808382526020820190506020840283018581111561194a576119496114ee565b5b835b8181101561199157803567ffffffffffffffff81111561196f5761196e6114e4565b5b80860161197c8982611894565b8552602085019450505060208101905061194c565b5050509392505050565b60006119a8368484611914565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600082825260208201905092915050565b7f4c69624469616d6f6e644375743a20496e636f7272656374204661636574437560008201527f74416374696f6e00000000000000000000000000000000000000000000000000602082015250565b6000611a7b602783611a0e565b9150611a8682611a1f565b604082019050919050565b60006020820190508181036000830152611aaa81611a6e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000819050919050565b6000611af582611ae0565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611b2757611b26611ab1565b5b600182019050919050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b611b6781611569565b82525050565b60038110611b7e57611b7d6119df565b5b50565b6000819050611b8f82611b6d565b919050565b6000611b9f82611b81565b9050919050565b611baf81611b94565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b611bea816117a5565b82525050565b6000611bfc8383611be1565b60208301905092915050565b6000602082019050919050565b6000611c2082611bb5565b611c2a8185611bc0565b9350611c3583611bd1565b8060005b83811015611c66578151611c4d8882611bf0565b9750611c5883611c08565b925050600181019050611c39565b5085935050505092915050565b6000606083016000830151611c8b6000860182611b5e565b506020830151611c9e6020860182611ba6565b5060408301518482036040860152611cb68282611c15565b9150508091505092915050565b6000611ccf8383611c73565b905092915050565b6000602082019050919050565b6000611cef82611b32565b611cf98185611b3d565b935083602082028501611d0b85611b4e565b8060005b85811015611d475784840389528151611d288582611cc3565b9450611d3383611cd7565b925060208a01995050600181019050611d0f565b50829750879550505050505092915050565b611d6281611569565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611da2578082015181840152602081019050611d87565b60008484015250505050565b6000611db982611d68565b611dc38185611d73565b9350611dd3818560208601611d84565b611ddc81611692565b840191505092915050565b60006060820190508181036000830152611e018186611ce4565b9050611e106020830185611d59565b8181036040830152611e228184611dae565b9050949350505050565b7f4c69624469616d6f6e644375743a204e6f2073656c6563746f727320696e206660008201527f6163657420746f20637574000000000000000000000000000000000000000000602082015250565b6000611e88602b83611a0e565b9150611e9382611e2c565b604082019050919050565b60006020820190508181036000830152611eb781611e7b565b9050919050565b7f4c69624469616d6f6e644375743a204164642066616365742063616e2774206260008201527f6520616464726573732830290000000000000000000000000000000000000000602082015250565b6000611f1a602c83611a0e565b9150611f2582611ebe565b604082019050919050565b60006020820190508181036000830152611f4981611f0d565b9050919050565b7f4c69624469616d6f6e644375743a2043616e2774206164642066756e6374696f60008201527f6e207468617420616c7265616479206578697374730000000000000000000000602082015250565b6000611fac603583611a0e565b9150611fb782611f50565b604082019050919050565b60006020820190508181036000830152611fdb81611f9f565b9050919050565b60006bffffffffffffffffffffffff82169050919050565b600061200582611fe2565b91506bffffffffffffffffffffffff820361202357612022611ab1565b5b600182019050919050565b7f4c69624469616d6f6e644375743a2043616e2774207265706c6163652066756e60008201527f6374696f6e20776974682073616d652066756e6374696f6e0000000000000000602082015250565b600061208a603883611a0e565b91506120958261202e565b604082019050919050565b600060208201905081810360008301526120b98161207d565b9050919050565b7f4c69624469616d6f6e644375743a2052656d6f7665206661636574206164647260008201527f657373206d757374206265206164647265737328302900000000000000000000602082015250565b600061211c603683611a0e565b9150612127826120c0565b604082019050919050565b6000602082019050818103600083015261214b8161210f565b9050919050565b600081905092915050565b600061216882611d68565b6121728185612152565b9350612182818560208601611d84565b80840191505092915050565b600061219a828461215d565b915081905092915050565b60006040820190506121ba6000830185611d59565b81810360208301526121cc8184611dae565b90509392505050565b7f4c69624469616d6f6e644375743a2043616e27742072656d6f76652066756e6360008201527f74696f6e207468617420646f65736e2774206578697374000000000000000000602082015250565b6000612231603783611a0e565b915061223c826121d5565b604082019050919050565b6000602082019050818103600083015261226081612224565b9050919050565b7f4c69624469616d6f6e644375743a2043616e27742072656d6f766520696d6d7560008201527f7461626c652066756e6374696f6e000000000000000000000000000000000000602082015250565b60006122c3602e83611a0e565b91506122ce82612267565b604082019050919050565b600060208201905081810360008301526122f2816122b6565b9050919050565b600061230482611ae0565b915061230f83611ae0565b925082820390508181111561232757612326611ab1565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b600081519050919050565b60006123728261235c565b61237c8185611a0e565b935061238c818560208601611d84565b61239581611692565b840191505092915050565b600060208201905081810360008301526123ba8184612367565b90509291505056fe4c69624469616d6f6e644375743a205f696e6974206164647265737320686173206e6f20636f64654c69624469616d6f6e644375743a204e657720666163657420686173206e6f20636f6465a264697066735822122004dd17027e2d85e2c9ba4dd23bec366917f137b8e8a2c39f745590c53687bbfe64736f6c63430008110033";

type DiamondCutFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DiamondCutFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DiamondCutFacet__factory extends ContractFactory {
  constructor(...args: DiamondCutFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DiamondCutFacet> {
    return super.deploy(overrides || {}) as Promise<DiamondCutFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DiamondCutFacet {
    return super.attach(address) as DiamondCutFacet;
  }
  override connect(signer: Signer): DiamondCutFacet__factory {
    return super.connect(signer) as DiamondCutFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DiamondCutFacetInterface {
    return new utils.Interface(_abi) as DiamondCutFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DiamondCutFacet {
    return new Contract(address, _abi, signerOrProvider) as DiamondCutFacet;
  }
}
