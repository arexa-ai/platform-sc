/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  ArexaTokenAdminFacet,
  ArexaTokenAdminFacetInterface,
} from "../../ArexaToken/ArexaTokenAdminFacet";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "AccessDenied",
    type: "error",
  },
  {
    inputs: [],
    name: "TargetedPausable__TargetedPaused",
    type: "error",
  },
  {
    inputs: [],
    name: "getGeneralFee",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getGeneralFeeAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPoolFee",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPoolFeeAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTreasuryAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getURL",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_generalFee",
        type: "uint16",
      },
    ],
    name: "setGeneralFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_generalFeeAddress",
        type: "address",
      },
    ],
    name: "setGeneralFeeAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_PoolFee",
        type: "uint16",
      },
    ],
    name: "setPoolFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_PoolFeeAddress",
        type: "address",
      },
    ],
    name: "setPoolFeeAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_treasuryAddress",
        type: "address",
      },
    ],
    name: "setTreasuryAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_url",
        type: "string",
      },
    ],
    name: "setURL",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506115c5806100206000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80636605bfda116100715780636605bfda146101675780636741fad21461018357806377343408146101a1578063e0024604146101bd578063f011a756146101db578063f9916d39146101f9576100b4565b80630dfe43f8146100b95780630e5a06b6146100d75780631a2b8150146100f357806325daa8f91461010f57806338bcdc1c1461012b57806361a1698e14610149575b600080fd5b6100c1610215565b6040516100ce9190610f4e565b60405180910390f35b6100f160048036038101906100ec9190610f9f565b610299565b005b61010d60048036038101906101089190611006565b610353565b005b61012960048036038101906101249190611006565b61040d565b005b6101336104c7565b60405161014091906110c3565b60405180910390f35b61015161054b565b60405161015e9190610f4e565b60405180910390f35b610181600480360381019061017c9190610f9f565b6105cf565b005b61018b610689565b60405161019891906110f4565b60405180910390f35b6101bb60048036038101906101b69190611174565b61070d565b005b6101c56107c9565b6040516101d29190610f4e565b60405180910390f35b6101e361084d565b6040516101f091906110f4565b60405180910390f35b610213600480360381019061020e9190610f9f565b6108d1565b005b600061021f61098b565b73ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff161461028c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102839061120d565b60405180910390fd5b6102946109c3565b905090565b6102a161098b565b73ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff161461030e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103059061120d565b60405180910390fd5b6000801b61031b816109f6565b7f9e262e26e9d5bf97da5c389e15529a31bb2b13d89967a4f6eab01792567d5fd661034581610a39565b61034e83610a46565b505050565b61035b61098b565b73ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16146103c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103bf9061120d565b60405180910390fd5b6000801b6103d5816109f6565b7f9e262e26e9d5bf97da5c389e15529a31bb2b13d89967a4f6eab01792567d5fd66103ff81610a39565b61040883610a93565b505050565b61041561098b565b73ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614610482576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104799061120d565b60405180910390fd5b6000801b61048f816109f6565b7f9e262e26e9d5bf97da5c389e15529a31bb2b13d89967a4f6eab01792567d5fd66104b981610a39565b6104c283610abc565b505050565b60606104d161098b565b73ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff161461053e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105359061120d565b60405180910390fd5b610546610ae5565b905090565b600061055561098b565b73ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16146105c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b99061120d565b60405180910390fd5b6105ca610b80565b905090565b6105d761098b565b73ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614610644576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063b9061120d565b60405180910390fd5b6000801b610651816109f6565b7f9e262e26e9d5bf97da5c389e15529a31bb2b13d89967a4f6eab01792567d5fd661067b81610a39565b61068483610bb3565b505050565b600061069361098b565b73ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614610700576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f79061120d565b60405180910390fd5b610708610c00565b905090565b61071561098b565b73ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614610782576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107799061120d565b60405180910390fd5b6000801b61078f816109f6565b7f9e262e26e9d5bf97da5c389e15529a31bb2b13d89967a4f6eab01792567d5fd66107b981610a39565b6107c38484610c21565b50505050565b60006107d361098b565b73ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614610840576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108379061120d565b60405180910390fd5b610848610c40565b905090565b600061085761098b565b73ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16146108c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108bb9061120d565b60405180910390fd5b6108cc610c73565b905090565b6108d961098b565b73ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614610946576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161093d9061120d565b60405180910390fd5b6000801b610953816109f6565b7f9e262e26e9d5bf97da5c389e15529a31bb2b13d89967a4f6eab01792567d5fd661097d81610a39565b61098683610c94565b505050565b600080610996610ce1565b90508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b60006109cd610d0e565b60020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6109ff81610d3b565b15610a36576040517f2d0a436a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b610a438133610d6e565b50565b80610a4f610d0e565b60030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b80610a9c610d0e565b60020160146101000a81548161ffff021916908361ffff16021790555050565b80610ac5610d0e565b60010160146101000a81548161ffff021916908361ffff16021790555050565b6060610aef610d0e565b6000018054610afd9061125c565b80601f0160208091040260200160405190810160405280929190818152602001828054610b299061125c565b8015610b765780601f10610b4b57610100808354040283529160200191610b76565b820191906000526020600020905b815481529060010190602001808311610b5957829003601f168201915b5050505050905090565b6000610b8a610d0e565b60030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b80610bbc610d0e565b60010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000610c0a610d0e565b60020160149054906101000a900461ffff16905090565b8181610c2b610d0e565b6000019182610c3b92919061147d565b505050565b6000610c4a610d0e565b60010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000610c7d610d0e565b60010160149054906101000a900461ffff16905090565b80610c9d610d0e565b60020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000807ff72346055b4d7224c7ec19860d22963ca622fbb313761bfba507c1a3aeedf37290508091505090565b6000807f3fcd443ff091d114942f25e5c03d43d2601e2157aed61f34014e948af05ef25190508091505090565b6000610d45610dbf565b600001600083815260200190815260200160002060009054906101000a900460ff169050919050565b610d788282610dec565b610dbb5781816040517f521dcf0d000000000000000000000000000000000000000000000000000000008152600401610db2929190611566565b60405180910390fd5b5050565b6000807fe8ceb94393aac3e803a9d4b376f7c5ffd7e8b6caab697212a5360c34a283caa190508091505090565b600080610df7610e8d565b9050610e84838260010160008460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000878152602001908152602001600020600101610eba90919063ffffffff16565b91505092915050565b6000807f746c6723185dc95a8925081faed89cbd4670299390e2ebfb0b9c3e755e204ef490508091505090565b6000610ee2836000018373ffffffffffffffffffffffffffffffffffffffff1660001b610eea565b905092915050565b600080836001016000848152602001908152602001600020541415905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610f3882610f0d565b9050919050565b610f4881610f2d565b82525050565b6000602082019050610f636000830184610f3f565b92915050565b600080fd5b600080fd5b610f7c81610f2d565b8114610f8757600080fd5b50565b600081359050610f9981610f73565b92915050565b600060208284031215610fb557610fb4610f69565b5b6000610fc384828501610f8a565b91505092915050565b600061ffff82169050919050565b610fe381610fcc565b8114610fee57600080fd5b50565b60008135905061100081610fda565b92915050565b60006020828403121561101c5761101b610f69565b5b600061102a84828501610ff1565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561106d578082015181840152602081019050611052565b60008484015250505050565b6000601f19601f8301169050919050565b600061109582611033565b61109f818561103e565b93506110af81856020860161104f565b6110b881611079565b840191505092915050565b600060208201905081810360008301526110dd818461108a565b905092915050565b6110ee81610fcc565b82525050565b600060208201905061110960008301846110e5565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126111345761113361110f565b5b8235905067ffffffffffffffff81111561115157611150611114565b5b60208301915083600182028301111561116d5761116c611119565b5b9250929050565b6000806020838503121561118b5761118a610f69565b5b600083013567ffffffffffffffff8111156111a9576111a8610f6e565b5b6111b58582860161111e565b92509250509250929050565b7f4e4f545f414c4c4f574544000000000000000000000000000000000000000000600082015250565b60006111f7600b8361103e565b9150611202826111c1565b602082019050919050565b60006020820190508181036000830152611226816111ea565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061127457607f821691505b6020821081036112875761128661122d565b5b50919050565b600082905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026113297fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826112ec565b61133386836112ec565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600061137a6113756113708461134b565b611355565b61134b565b9050919050565b6000819050919050565b6113948361135f565b6113a86113a082611381565b8484546112f9565b825550505050565b600090565b6113bd6113b0565b6113c881848461138b565b505050565b5b818110156113ec576113e16000826113b5565b6001810190506113ce565b5050565b601f82111561143157611402816112c7565b61140b846112dc565b8101602085101561141a578190505b61142e611426856112dc565b8301826113cd565b50505b505050565b600082821c905092915050565b600061145460001984600802611436565b1980831691505092915050565b600061146d8383611443565b9150826002028217905092915050565b611487838361128d565b67ffffffffffffffff8111156114a05761149f611298565b5b6114aa825461125c565b6114b58282856113f0565b6000601f8311600181146114e457600084156114d2578287013590505b6114dc8582611461565b865550611544565b601f1984166114f2866112c7565b60005b8281101561151a578489013582556001820191506020850194506020810190506114f5565b868310156115375784890135611533601f891682611443565b8355505b6001600288020188555050505b50505050505050565b6000819050919050565b6115608161154d565b82525050565b600060408201905061157b6000830185611557565b6115886020830184610f3f565b939250505056fea264697066735822122038dc44fbe85971eb94bb43335c00b55614c98047674f12f4d5b13741c8d5873d64736f6c63430008110033";

type ArexaTokenAdminFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ArexaTokenAdminFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ArexaTokenAdminFacet__factory extends ContractFactory {
  constructor(...args: ArexaTokenAdminFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ArexaTokenAdminFacet> {
    return super.deploy(overrides || {}) as Promise<ArexaTokenAdminFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ArexaTokenAdminFacet {
    return super.attach(address) as ArexaTokenAdminFacet;
  }
  override connect(signer: Signer): ArexaTokenAdminFacet__factory {
    return super.connect(signer) as ArexaTokenAdminFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ArexaTokenAdminFacetInterface {
    return new utils.Interface(_abi) as ArexaTokenAdminFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ArexaTokenAdminFacet {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ArexaTokenAdminFacet;
  }
}
