/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  ArexaTokenFacet,
  ArexaTokenFacetInterface,
} from "../../ArexaToken/ArexaTokenFacet";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "AccessDenied",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC20Extended__ExcessiveAllowance",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC20Extended__InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [],
    name: "TargetedPausable__TargetedPaused",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "holder",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "allowance_",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "status_",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "balance_",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burnFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "totalSupply_",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "status_",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "holder",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "status_",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506124b2806100206000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806342966c681161008c57806395d89b411161006657806395d89b411461025d578063a457c2d71461027b578063a9059cbb146102ab578063dd62ed3e146102db576100ea565b806342966c68146101f557806370a082311461021157806379cc679014610241576100ea565b806323b872dd116100c857806323b872dd1461015b578063313ce5671461018b57806339509351146101a957806340c10f19146101d9576100ea565b806306fdde03146100ef578063095ea7b31461010d57806318160ddd1461013d575b600080fd5b6100f761030b565b60405161010491906119bf565b60405180910390f35b61012760048036038101906101229190611a7a565b61031a565b6040516101349190611ad5565b60405180910390f35b61014561034f565b6040516101529190611aff565b60405180910390f35b61017560048036038101906101709190611b1a565b61035e565b6040516101829190611ad5565b60405180910390f35b610193610394565b6040516101a09190611b89565b60405180910390f35b6101c360048036038101906101be9190611a7a565b6103a3565b6040516101d09190611ad5565b60405180910390f35b6101f360048036038101906101ee9190611a7a565b6103b7565b005b61020f600480360381019061020a9190611ba4565b6103fe565b005b61022b60048036038101906102269190611bd1565b610444565b6040516102389190611aff565b60405180910390f35b61025b60048036038101906102569190611a7a565b610456565b005b61026561049d565b60405161027291906119bf565b60405180910390f35b61029560048036038101906102909190611a7a565b6104ac565b6040516102a29190611ad5565b60405180910390f35b6102c560048036038101906102c09190611a7a565b6104c1565b6040516102d29190611ad5565b60405180910390f35b6102f560048036038101906102f09190611bfe565b6104f6565b6040516103029190611aff565b60405180910390f35b606061031561050a565b905090565b6000604060048161032b9190611c6d565b6000369050101561033b57600080fd5b610346338585610519565b91505092915050565b6000610359610594565b905090565b6000606060048161036f9190611c6d565b6000369050101561037f57600080fd5b61038a8585856105a7565b9150509392505050565b600061039e6105cb565b905090565b60006103af83836105da565b905092915050565b6000801b6103c4816105fc565b7fe1dcbdb91df27212a29bc27177c840cf2f819ecf2187432e1fac86c2dd5dfca96103ee8161063f565b6103f8848461064c565b50505050565b6000801b61040b816105fc565b7fe1dcbdb91df27212a29bc27177c840cf2f819ecf2187432e1fac86c2dd5dfca96104358161063f565b61043f33846106d5565b505050565b600061044f8261075e565b9050919050565b6000801b610463816105fc565b7fe1dcbdb91df27212a29bc27177c840cf2f819ecf2187432e1fac86c2dd5dfca961048d8161063f565b61049784846106d5565b50505050565b60606104a76107b0565b905090565b60006104b93384846107bf565b905092915050565b600060406004816104d29190611c6d565b600036905010156104e257600080fd5b6104ed3385856107e3565b91505092915050565b60006105028383610a81565b905092915050565b6060610514610a95565b905090565b60008060001b610528816105fc565b60008314806105405750600061053e3386610a81565b145b61057f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057690611ced565b60405180910390fd5b61058a858585610b30565b9150509392505050565b600061059e610b46565b60020154905090565b60006105b4843384610b73565b6105bf8484846107e3565b50600190509392505050565b60006105d5610bd8565b905090565b60008060001b6105e9816105fc565b6105f38484610bf8565b91505092915050565b61060581610c59565b1561063c576040517f2d0a436a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b6106498133610c8c565b50565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036106bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106b290611d59565b60405180910390fd5b6106c760008383610cdd565b6106d18282610dcf565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610744576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073b90611dc5565b60405180910390fd5b61075082600083610cdd565b61075a8282610eb9565b5050565b6000610768610b46565b60000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606107ba61101d565b905090565b60008060001b6107ce816105fc565b6107d98585856110b8565b9150509392505050565b600061080f7f58ee1fe68bf578a184572569d41aaa78ecfab9e6f520cea3fbeb3b18c9312f95856110d0565b80610840575061083f7f2e5b542f3df308d4afea2a0a7e615a38af6134400e948efd7c0f1693129e069a846110d0565b5b1561085757610850848484611146565b9050610a7a565b600061271090506000610868611244565b61ffff1690506000610878611265565b61ffff1690506000610893828461128690919063ffffffff16565b905060006108e2600a6108d460056108c6896108b8888e61129c90919063ffffffff16565b6112b290919063ffffffff16565b61128690919063ffffffff16565b6112b290919063ffffffff16565b90506000610931600a61092360056109158a6109078a8f61129c90919063ffffffff16565b6112b290919063ffffffff16565b61128690919063ffffffff16565b6112b290919063ffffffff16565b9050600061094882846112c890919063ffffffff16565b9050600061095f848b6112c890919063ffffffff16565b9050600061096e8d8d84611146565b9050806109b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109a790611e31565b60405180910390fd5b6000831115610a0e576109cb8d6109c56112de565b85611146565b905080610a0d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a0490611e9d565b60405180910390fd5b5b6000841115610a6c57610a298d610a23611311565b86611146565b905080610a6b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a6290611f09565b60405180910390fd5b5b505050505050505050600190505b9392505050565b6000610a8d8383611344565b905092915050565b6060610a9f6113d4565b6000018054610aad90611f58565b80601f0160208091040260200160405190810160405280929190818152602001828054610ad990611f58565b8015610b265780601f10610afb57610100808354040283529160200191610b26565b820191906000526020600020905b815481529060010190602001808311610b0957829003601f168201915b5050505050905090565b6000610b3d848484611401565b90509392505050565b6000807fe9a7f3ff2959ae3f6e4713ab171289ebc2fa74daee48b6806f4ee628214ba41890508091505090565b6000610b7f8484611344565b905080821115610bc4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bbb90611fd5565b60405180910390fd5b610bd18484848403611401565b5050505050565b6000610be26113d4565b60020160009054906101000a900460ff16905090565b600080610c053385611344565b9050828101811115610c43576040517fd256efb100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610c503385858401611401565b91505092915050565b6000610c636115da565b600001600083815260200190815260200160002060009054906101000a900460ff169050919050565b610c968282611607565b610cd95781816040517f521dcf0d000000000000000000000000000000000000000000000000000000008152600401610cd092919061201d565b60405180910390fd5b5050565b6000801b610cea816105fc565b610d147ff068a4043b7899a312f6fe21b5b3a74d16e144a513eb6a345b2c713987c93b55856110d0565b15610d54576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d4b90612092565b60405180910390fd5b610d7e7fc2f91dd6e7debe58ff6f83f765bc16170e3d00c80756fde41c280108425bbd47846110d0565b15610dbe576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610db5906120fe565b60405180910390fd5b610dc98484846116a8565b50505050565b6000610dd9610b46565b905081816002016000828254610def9190611c6d565b92505081905550818160000160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610e479190611c6d565b925050819055508273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610eac9190611aff565b60405180910390a3505050565b6000610ec3610b46565b905060008160000160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905080831115610f4e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f459061216a565b60405180910390fd5b8281038260000160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555082826002016000828254610faa919061218a565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8560405161100f9190611aff565b60405180910390a350505050565b60606110276113d4565b600101805461103590611f58565b80601f016020809104026020016040519081016040528092919081815260200182805461106190611f58565b80156110ae5780601f10611083576101008083540402835291602001916110ae565b820191906000526020600020905b81548152906001019060200180831161109157829003601f168201915b5050505050905090565b60006110c5848484610b73565b600190509392505050565b6000806110db6116ad565b905080600001600085815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1691505092915050565b60008073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036111b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111ad9061220a565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611225576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161121c90612276565b60405180910390fd5b611230848484610cdd565b61123b8484846116da565b90509392505050565b600061124e611882565b60010160149054906101000a900461ffff16905090565b600061126f611882565b60020160149054906101000a900461ffff16905090565b600081836112949190611c6d565b905092915050565b600081836112aa9190612296565b905092915050565b600081836112c09190612307565b905092915050565b600081836112d6919061218a565b905092915050565b60006112e8611882565b60020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600061131b611882565b60030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600061134e610b46565b60010160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6000807f08f0a4c6d91dd69feb0d369e358138ae9e369f563f1cc74f7107ce442013481590508091505090565b60008073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611471576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161146890612384565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036114e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114d7906123f0565b60405180910390fd5b816114e9610b46565b60010160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516115c79190611aff565b60405180910390a3600190509392505050565b6000807fe8ceb94393aac3e803a9d4b376f7c5ffd7e8b6caab697212a5360c34a283caa190508091505090565b6000806116126118af565b905061169f838260010160008460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008781526020019081526020016000206001016118dc90919063ffffffff16565b91505092915050565b505050565b6000807f7fb8776fdb93079091f516133d7bb98c82f37f53f39f39f153c42a90e5e5891290508091505090565b6000806116e5610b46565b905060008160000160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905080841115611770576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117679061245c565b60405180910390fd5b8381038260000160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550838260000160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546118099190611c6d565b925050819055508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8660405161186d9190611aff565b60405180910390a36001925050509392505050565b6000807f3fcd443ff091d114942f25e5c03d43d2601e2157aed61f34014e948af05ef25190508091505090565b6000807f746c6723185dc95a8925081faed89cbd4670299390e2ebfb0b9c3e755e204ef490508091505090565b6000611904836000018373ffffffffffffffffffffffffffffffffffffffff1660001b61190c565b905092915050565b600080836001016000848152602001908152602001600020541415905092915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561196957808201518184015260208101905061194e565b60008484015250505050565b6000601f19601f8301169050919050565b60006119918261192f565b61199b818561193a565b93506119ab81856020860161194b565b6119b481611975565b840191505092915050565b600060208201905081810360008301526119d98184611986565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611a11826119e6565b9050919050565b611a2181611a06565b8114611a2c57600080fd5b50565b600081359050611a3e81611a18565b92915050565b6000819050919050565b611a5781611a44565b8114611a6257600080fd5b50565b600081359050611a7481611a4e565b92915050565b60008060408385031215611a9157611a906119e1565b5b6000611a9f85828601611a2f565b9250506020611ab085828601611a65565b9150509250929050565b60008115159050919050565b611acf81611aba565b82525050565b6000602082019050611aea6000830184611ac6565b92915050565b611af981611a44565b82525050565b6000602082019050611b146000830184611af0565b92915050565b600080600060608486031215611b3357611b326119e1565b5b6000611b4186828701611a2f565b9350506020611b5286828701611a2f565b9250506040611b6386828701611a65565b9150509250925092565b600060ff82169050919050565b611b8381611b6d565b82525050565b6000602082019050611b9e6000830184611b7a565b92915050565b600060208284031215611bba57611bb96119e1565b5b6000611bc884828501611a65565b91505092915050565b600060208284031215611be757611be66119e1565b5b6000611bf584828501611a2f565b91505092915050565b60008060408385031215611c1557611c146119e1565b5b6000611c2385828601611a2f565b9250506020611c3485828601611a2f565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611c7882611a44565b9150611c8383611a44565b9250828201905080821115611c9b57611c9a611c3e565b5b92915050565b7f417070726f76653a207a65726f20666972737400000000000000000000000000600082015250565b6000611cd760138361193a565b9150611ce282611ca1565b602082019050919050565b60006020820190508181036000830152611d0681611cca565b9050919050565b7f4d696e74546f5a65726f41646472657373000000000000000000000000000000600082015250565b6000611d4360118361193a565b9150611d4e82611d0d565b602082019050919050565b60006020820190508181036000830152611d7281611d36565b9050919050565b7f4275726e46726f6d5a65726f4164647265737300000000000000000000000000600082015250565b6000611daf60138361193a565b9150611dba82611d79565b602082019050919050565b60006020820190508181036000830152611dde81611da2565b9050919050565b7f5472616e73666572206572726f72000000000000000000000000000000000000600082015250565b6000611e1b600e8361193a565b9150611e2682611de5565b602082019050919050565b60006020820190508181036000830152611e4a81611e0e565b9050919050565b7f47656e6572616c20666565207472616e73666572206572726f72000000000000600082015250565b6000611e87601a8361193a565b9150611e9282611e51565b602082019050919050565b60006020820190508181036000830152611eb681611e7a565b9050919050565b7f506f6f6c20666565207472616e73666572206572726f72000000000000000000600082015250565b6000611ef360178361193a565b9150611efe82611ebd565b602082019050919050565b60006020820190508181036000830152611f2281611ee6565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611f7057607f821691505b602082108103611f8357611f82611f29565b5b50919050565b7f496e73756666696369656e74416c6c6f77616e63650000000000000000000000600082015250565b6000611fbf60158361193a565b9150611fca82611f89565b602082019050919050565b60006020820190508181036000830152611fee81611fb2565b9050919050565b6000819050919050565b61200881611ff5565b82525050565b61201781611a06565b82525050565b60006040820190506120326000830185611fff565b61203f602083018461200e565b9392505050565b7f426c61636b6c6973743a2073656e646572000000000000000000000000000000600082015250565b600061207c60118361193a565b915061208782612046565b602082019050919050565b600060208201905081810360008301526120ab8161206f565b9050919050565b7f426c61636b6c6973743a20726563697069656e74000000000000000000000000600082015250565b60006120e860148361193a565b91506120f3826120b2565b602082019050919050565b60006020820190508181036000830152612117816120db565b9050919050565b7f4275726e4578636565647342616c616e63650000000000000000000000000000600082015250565b600061215460128361193a565b915061215f8261211e565b602082019050919050565b6000602082019050818103600083015261218381612147565b9050919050565b600061219582611a44565b91506121a083611a44565b92508282039050818111156121b8576121b7611c3e565b5b92915050565b7f5472616e7366657246726f6d5a65726f41646472657373000000000000000000600082015250565b60006121f460178361193a565b91506121ff826121be565b602082019050919050565b60006020820190508181036000830152612223816121e7565b9050919050565b7f5472616e73666572546f5a65726f416464726573730000000000000000000000600082015250565b600061226060158361193a565b915061226b8261222a565b602082019050919050565b6000602082019050818103600083015261228f81612253565b9050919050565b60006122a182611a44565b91506122ac83611a44565b92508282026122ba81611a44565b915082820484148315176122d1576122d0611c3e565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061231282611a44565b915061231d83611a44565b92508261232d5761232c6122d8565b5b828204905092915050565b7f417070726f766546726f6d5a65726f4164647265737300000000000000000000600082015250565b600061236e60168361193a565b915061237982612338565b602082019050919050565b6000602082019050818103600083015261239d81612361565b9050919050565b7f417070726f7665546f5a65726f41646472657373000000000000000000000000600082015250565b60006123da60148361193a565b91506123e5826123a4565b602082019050919050565b60006020820190508181036000830152612409816123cd565b9050919050565b7f5472616e736665724578636565647342616c616e636500000000000000000000600082015250565b600061244660168361193a565b915061245182612410565b602082019050919050565b6000602082019050818103600083015261247581612439565b905091905056fea264697066735822122051f330d3ccd48d703a52ffe03a2a40aea4de55e6aa71bcd0e8d514924590d96164736f6c63430008110033";

type ArexaTokenFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ArexaTokenFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ArexaTokenFacet__factory extends ContractFactory {
  constructor(...args: ArexaTokenFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ArexaTokenFacet> {
    return super.deploy(overrides || {}) as Promise<ArexaTokenFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ArexaTokenFacet {
    return super.attach(address) as ArexaTokenFacet;
  }
  override connect(signer: Signer): ArexaTokenFacet__factory {
    return super.connect(signer) as ArexaTokenFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ArexaTokenFacetInterface {
    return new utils.Interface(_abi) as ArexaTokenFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ArexaTokenFacet {
    return new Contract(address, _abi, signerOrProvider) as ArexaTokenFacet;
  }
}
