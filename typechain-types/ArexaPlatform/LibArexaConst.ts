/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BytesLike,
  CallOverrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type { FunctionFragment, Result } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
} from "../common";

export interface LibArexaConstInterface extends utils.Interface {
  functions: {
    "AREXA_ADMIN_ROLE()": FunctionFragment;
    "AREXA_TOKEN()": FunctionFragment;
    "AREXA_TOKEN_ID()": FunctionFragment;
    "AREXA_TOKEN_POOL_AREXAINC()": FunctionFragment;
    "AREXA_TOKEN_POOL_DEVELOPMENT()": FunctionFragment;
    "AREXA_TOKEN_POOL_INVESTOR()": FunctionFragment;
    "AREXA_TOKEN_POOL_MARKETING()": FunctionFragment;
    "AREXA_TOKEN_POOL_RESERVED()": FunctionFragment;
    "FULL()": FunctionFragment;
    "MAGIC100_FIRST_BUYER()": FunctionFragment;
    "MAGIC_TOKEN()": FunctionFragment;
    "MAGIC_TOKEN_ID()": FunctionFragment;
    "SUBSCR1_TOKEN()": FunctionFragment;
    "SUBSCR1_TOKEN_TYPE()": FunctionFragment;
    "SUBSCR2_TOKEN()": FunctionFragment;
    "SUBSCR2_TOKEN_TYPE()": FunctionFragment;
    "TRADER_TOKEN()": FunctionFragment;
    "TRADER_TOKEN_ID()": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "AREXA_ADMIN_ROLE"
      | "AREXA_TOKEN"
      | "AREXA_TOKEN_ID"
      | "AREXA_TOKEN_POOL_AREXAINC"
      | "AREXA_TOKEN_POOL_DEVELOPMENT"
      | "AREXA_TOKEN_POOL_INVESTOR"
      | "AREXA_TOKEN_POOL_MARKETING"
      | "AREXA_TOKEN_POOL_RESERVED"
      | "FULL"
      | "MAGIC100_FIRST_BUYER"
      | "MAGIC_TOKEN"
      | "MAGIC_TOKEN_ID"
      | "SUBSCR1_TOKEN"
      | "SUBSCR1_TOKEN_TYPE"
      | "SUBSCR2_TOKEN"
      | "SUBSCR2_TOKEN_TYPE"
      | "TRADER_TOKEN"
      | "TRADER_TOKEN_ID"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "AREXA_ADMIN_ROLE",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "AREXA_TOKEN",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "AREXA_TOKEN_ID",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "AREXA_TOKEN_POOL_AREXAINC",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "AREXA_TOKEN_POOL_DEVELOPMENT",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "AREXA_TOKEN_POOL_INVESTOR",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "AREXA_TOKEN_POOL_MARKETING",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "AREXA_TOKEN_POOL_RESERVED",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "FULL", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "MAGIC100_FIRST_BUYER",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "MAGIC_TOKEN",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "MAGIC_TOKEN_ID",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "SUBSCR1_TOKEN",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "SUBSCR1_TOKEN_TYPE",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "SUBSCR2_TOKEN",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "SUBSCR2_TOKEN_TYPE",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "TRADER_TOKEN",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "TRADER_TOKEN_ID",
    values?: undefined
  ): string;

  decodeFunctionResult(
    functionFragment: "AREXA_ADMIN_ROLE",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "AREXA_TOKEN",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "AREXA_TOKEN_ID",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "AREXA_TOKEN_POOL_AREXAINC",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "AREXA_TOKEN_POOL_DEVELOPMENT",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "AREXA_TOKEN_POOL_INVESTOR",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "AREXA_TOKEN_POOL_MARKETING",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "AREXA_TOKEN_POOL_RESERVED",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "FULL", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "MAGIC100_FIRST_BUYER",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "MAGIC_TOKEN",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "MAGIC_TOKEN_ID",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "SUBSCR1_TOKEN",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "SUBSCR1_TOKEN_TYPE",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "SUBSCR2_TOKEN",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "SUBSCR2_TOKEN_TYPE",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "TRADER_TOKEN",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "TRADER_TOKEN_ID",
    data: BytesLike
  ): Result;

  events: {};
}

export interface LibArexaConst extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: LibArexaConstInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    AREXA_ADMIN_ROLE(overrides?: CallOverrides): Promise<[string]>;

    AREXA_TOKEN(overrides?: CallOverrides): Promise<[string]>;

    AREXA_TOKEN_ID(overrides?: CallOverrides): Promise<[BigNumber]>;

    AREXA_TOKEN_POOL_AREXAINC(overrides?: CallOverrides): Promise<[number]>;

    AREXA_TOKEN_POOL_DEVELOPMENT(overrides?: CallOverrides): Promise<[number]>;

    AREXA_TOKEN_POOL_INVESTOR(overrides?: CallOverrides): Promise<[number]>;

    AREXA_TOKEN_POOL_MARKETING(overrides?: CallOverrides): Promise<[number]>;

    AREXA_TOKEN_POOL_RESERVED(overrides?: CallOverrides): Promise<[number]>;

    FULL(overrides?: CallOverrides): Promise<[string]>;

    MAGIC100_FIRST_BUYER(overrides?: CallOverrides): Promise<[string]>;

    MAGIC_TOKEN(overrides?: CallOverrides): Promise<[string]>;

    MAGIC_TOKEN_ID(overrides?: CallOverrides): Promise<[BigNumber]>;

    SUBSCR1_TOKEN(overrides?: CallOverrides): Promise<[string]>;

    SUBSCR1_TOKEN_TYPE(overrides?: CallOverrides): Promise<[BigNumber]>;

    SUBSCR2_TOKEN(overrides?: CallOverrides): Promise<[string]>;

    SUBSCR2_TOKEN_TYPE(overrides?: CallOverrides): Promise<[BigNumber]>;

    TRADER_TOKEN(overrides?: CallOverrides): Promise<[string]>;

    TRADER_TOKEN_ID(overrides?: CallOverrides): Promise<[BigNumber]>;
  };

  AREXA_ADMIN_ROLE(overrides?: CallOverrides): Promise<string>;

  AREXA_TOKEN(overrides?: CallOverrides): Promise<string>;

  AREXA_TOKEN_ID(overrides?: CallOverrides): Promise<BigNumber>;

  AREXA_TOKEN_POOL_AREXAINC(overrides?: CallOverrides): Promise<number>;

  AREXA_TOKEN_POOL_DEVELOPMENT(overrides?: CallOverrides): Promise<number>;

  AREXA_TOKEN_POOL_INVESTOR(overrides?: CallOverrides): Promise<number>;

  AREXA_TOKEN_POOL_MARKETING(overrides?: CallOverrides): Promise<number>;

  AREXA_TOKEN_POOL_RESERVED(overrides?: CallOverrides): Promise<number>;

  FULL(overrides?: CallOverrides): Promise<string>;

  MAGIC100_FIRST_BUYER(overrides?: CallOverrides): Promise<string>;

  MAGIC_TOKEN(overrides?: CallOverrides): Promise<string>;

  MAGIC_TOKEN_ID(overrides?: CallOverrides): Promise<BigNumber>;

  SUBSCR1_TOKEN(overrides?: CallOverrides): Promise<string>;

  SUBSCR1_TOKEN_TYPE(overrides?: CallOverrides): Promise<BigNumber>;

  SUBSCR2_TOKEN(overrides?: CallOverrides): Promise<string>;

  SUBSCR2_TOKEN_TYPE(overrides?: CallOverrides): Promise<BigNumber>;

  TRADER_TOKEN(overrides?: CallOverrides): Promise<string>;

  TRADER_TOKEN_ID(overrides?: CallOverrides): Promise<BigNumber>;

  callStatic: {
    AREXA_ADMIN_ROLE(overrides?: CallOverrides): Promise<string>;

    AREXA_TOKEN(overrides?: CallOverrides): Promise<string>;

    AREXA_TOKEN_ID(overrides?: CallOverrides): Promise<BigNumber>;

    AREXA_TOKEN_POOL_AREXAINC(overrides?: CallOverrides): Promise<number>;

    AREXA_TOKEN_POOL_DEVELOPMENT(overrides?: CallOverrides): Promise<number>;

    AREXA_TOKEN_POOL_INVESTOR(overrides?: CallOverrides): Promise<number>;

    AREXA_TOKEN_POOL_MARKETING(overrides?: CallOverrides): Promise<number>;

    AREXA_TOKEN_POOL_RESERVED(overrides?: CallOverrides): Promise<number>;

    FULL(overrides?: CallOverrides): Promise<string>;

    MAGIC100_FIRST_BUYER(overrides?: CallOverrides): Promise<string>;

    MAGIC_TOKEN(overrides?: CallOverrides): Promise<string>;

    MAGIC_TOKEN_ID(overrides?: CallOverrides): Promise<BigNumber>;

    SUBSCR1_TOKEN(overrides?: CallOverrides): Promise<string>;

    SUBSCR1_TOKEN_TYPE(overrides?: CallOverrides): Promise<BigNumber>;

    SUBSCR2_TOKEN(overrides?: CallOverrides): Promise<string>;

    SUBSCR2_TOKEN_TYPE(overrides?: CallOverrides): Promise<BigNumber>;

    TRADER_TOKEN(overrides?: CallOverrides): Promise<string>;

    TRADER_TOKEN_ID(overrides?: CallOverrides): Promise<BigNumber>;
  };

  filters: {};

  estimateGas: {
    AREXA_ADMIN_ROLE(overrides?: CallOverrides): Promise<BigNumber>;

    AREXA_TOKEN(overrides?: CallOverrides): Promise<BigNumber>;

    AREXA_TOKEN_ID(overrides?: CallOverrides): Promise<BigNumber>;

    AREXA_TOKEN_POOL_AREXAINC(overrides?: CallOverrides): Promise<BigNumber>;

    AREXA_TOKEN_POOL_DEVELOPMENT(overrides?: CallOverrides): Promise<BigNumber>;

    AREXA_TOKEN_POOL_INVESTOR(overrides?: CallOverrides): Promise<BigNumber>;

    AREXA_TOKEN_POOL_MARKETING(overrides?: CallOverrides): Promise<BigNumber>;

    AREXA_TOKEN_POOL_RESERVED(overrides?: CallOverrides): Promise<BigNumber>;

    FULL(overrides?: CallOverrides): Promise<BigNumber>;

    MAGIC100_FIRST_BUYER(overrides?: CallOverrides): Promise<BigNumber>;

    MAGIC_TOKEN(overrides?: CallOverrides): Promise<BigNumber>;

    MAGIC_TOKEN_ID(overrides?: CallOverrides): Promise<BigNumber>;

    SUBSCR1_TOKEN(overrides?: CallOverrides): Promise<BigNumber>;

    SUBSCR1_TOKEN_TYPE(overrides?: CallOverrides): Promise<BigNumber>;

    SUBSCR2_TOKEN(overrides?: CallOverrides): Promise<BigNumber>;

    SUBSCR2_TOKEN_TYPE(overrides?: CallOverrides): Promise<BigNumber>;

    TRADER_TOKEN(overrides?: CallOverrides): Promise<BigNumber>;

    TRADER_TOKEN_ID(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    AREXA_ADMIN_ROLE(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    AREXA_TOKEN(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    AREXA_TOKEN_ID(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    AREXA_TOKEN_POOL_AREXAINC(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    AREXA_TOKEN_POOL_DEVELOPMENT(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    AREXA_TOKEN_POOL_INVESTOR(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    AREXA_TOKEN_POOL_MARKETING(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    AREXA_TOKEN_POOL_RESERVED(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    FULL(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    MAGIC100_FIRST_BUYER(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    MAGIC_TOKEN(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    MAGIC_TOKEN_ID(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    SUBSCR1_TOKEN(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    SUBSCR1_TOKEN_TYPE(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    SUBSCR2_TOKEN(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    SUBSCR2_TOKEN_TYPE(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    TRADER_TOKEN(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    TRADER_TOKEN_ID(overrides?: CallOverrides): Promise<PopulatedTransaction>;
  };
}
