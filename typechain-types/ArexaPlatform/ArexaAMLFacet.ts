/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type { FunctionFragment, Result } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "../common";

export interface ArexaAMLFacetInterface extends utils.Interface {
  functions: {
    "MAGIC100_FIRST_BUYER()": FunctionFragment;
    "getAccountBlackWhiteList(bytes32,address)": FunctionFragment;
    "getMagic100FirstBuyerWL(address)": FunctionFragment;
    "setAccountBlackWhiteList(bytes32,address,bool)": FunctionFragment;
    "setBatchMagic100FirstBuyerWL(address[],bool)": FunctionFragment;
    "setMagic100FirstBuyerWL(address,bool)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "MAGIC100_FIRST_BUYER"
      | "getAccountBlackWhiteList"
      | "getMagic100FirstBuyerWL"
      | "setAccountBlackWhiteList"
      | "setBatchMagic100FirstBuyerWL"
      | "setMagic100FirstBuyerWL"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "MAGIC100_FIRST_BUYER",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getAccountBlackWhiteList",
    values: [PromiseOrValue<BytesLike>, PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "getMagic100FirstBuyerWL",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "setAccountBlackWhiteList",
    values: [
      PromiseOrValue<BytesLike>,
      PromiseOrValue<string>,
      PromiseOrValue<boolean>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "setBatchMagic100FirstBuyerWL",
    values: [PromiseOrValue<string>[], PromiseOrValue<boolean>]
  ): string;
  encodeFunctionData(
    functionFragment: "setMagic100FirstBuyerWL",
    values: [PromiseOrValue<string>, PromiseOrValue<boolean>]
  ): string;

  decodeFunctionResult(
    functionFragment: "MAGIC100_FIRST_BUYER",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getAccountBlackWhiteList",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getMagic100FirstBuyerWL",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setAccountBlackWhiteList",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setBatchMagic100FirstBuyerWL",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setMagic100FirstBuyerWL",
    data: BytesLike
  ): Result;

  events: {};
}

export interface ArexaAMLFacet extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: ArexaAMLFacetInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    MAGIC100_FIRST_BUYER(overrides?: CallOverrides): Promise<[string]>;

    getAccountBlackWhiteList(
      _target: PromiseOrValue<BytesLike>,
      _account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    getMagic100FirstBuyerWL(
      _account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    setAccountBlackWhiteList(
      _target: PromiseOrValue<BytesLike>,
      _account: PromiseOrValue<string>,
      _lockValue: PromiseOrValue<boolean>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    setBatchMagic100FirstBuyerWL(
      _addresses: PromiseOrValue<string>[],
      _lockValue: PromiseOrValue<boolean>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    setMagic100FirstBuyerWL(
      _account: PromiseOrValue<string>,
      _lockValue: PromiseOrValue<boolean>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;
  };

  MAGIC100_FIRST_BUYER(overrides?: CallOverrides): Promise<string>;

  getAccountBlackWhiteList(
    _target: PromiseOrValue<BytesLike>,
    _account: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<boolean>;

  getMagic100FirstBuyerWL(
    _account: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<boolean>;

  setAccountBlackWhiteList(
    _target: PromiseOrValue<BytesLike>,
    _account: PromiseOrValue<string>,
    _lockValue: PromiseOrValue<boolean>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  setBatchMagic100FirstBuyerWL(
    _addresses: PromiseOrValue<string>[],
    _lockValue: PromiseOrValue<boolean>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  setMagic100FirstBuyerWL(
    _account: PromiseOrValue<string>,
    _lockValue: PromiseOrValue<boolean>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    MAGIC100_FIRST_BUYER(overrides?: CallOverrides): Promise<string>;

    getAccountBlackWhiteList(
      _target: PromiseOrValue<BytesLike>,
      _account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<boolean>;

    getMagic100FirstBuyerWL(
      _account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<boolean>;

    setAccountBlackWhiteList(
      _target: PromiseOrValue<BytesLike>,
      _account: PromiseOrValue<string>,
      _lockValue: PromiseOrValue<boolean>,
      overrides?: CallOverrides
    ): Promise<void>;

    setBatchMagic100FirstBuyerWL(
      _addresses: PromiseOrValue<string>[],
      _lockValue: PromiseOrValue<boolean>,
      overrides?: CallOverrides
    ): Promise<void>;

    setMagic100FirstBuyerWL(
      _account: PromiseOrValue<string>,
      _lockValue: PromiseOrValue<boolean>,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {};

  estimateGas: {
    MAGIC100_FIRST_BUYER(overrides?: CallOverrides): Promise<BigNumber>;

    getAccountBlackWhiteList(
      _target: PromiseOrValue<BytesLike>,
      _account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getMagic100FirstBuyerWL(
      _account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    setAccountBlackWhiteList(
      _target: PromiseOrValue<BytesLike>,
      _account: PromiseOrValue<string>,
      _lockValue: PromiseOrValue<boolean>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    setBatchMagic100FirstBuyerWL(
      _addresses: PromiseOrValue<string>[],
      _lockValue: PromiseOrValue<boolean>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    setMagic100FirstBuyerWL(
      _account: PromiseOrValue<string>,
      _lockValue: PromiseOrValue<boolean>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    MAGIC100_FIRST_BUYER(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getAccountBlackWhiteList(
      _target: PromiseOrValue<BytesLike>,
      _account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getMagic100FirstBuyerWL(
      _account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    setAccountBlackWhiteList(
      _target: PromiseOrValue<BytesLike>,
      _account: PromiseOrValue<string>,
      _lockValue: PromiseOrValue<boolean>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    setBatchMagic100FirstBuyerWL(
      _addresses: PromiseOrValue<string>[],
      _lockValue: PromiseOrValue<boolean>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    setMagic100FirstBuyerWL(
      _account: PromiseOrValue<string>,
      _lockValue: PromiseOrValue<boolean>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;
  };
}
