[
  "function AMOUNT_VALUE_TYPE() view returns (uint8)",
  "function AREXA_ADMIN_ROLE() view returns (bytes32)",
  "function AREXA_TOKEN_ID() view returns (uint256)",
  "function AREXA_TOKEN_POOL_AREXAINC() view returns (uint8)",
  "function AREXA_TOKEN_POOL_DEVELOPMENT() view returns (uint8)",
  "function AREXA_TOKEN_POOL_INVESTOR() view returns (uint8)",
  "function AREXA_TOKEN_POOL_MARKETING() view returns (uint8)",
  "function AREXA_TOKEN_POOL_RESERVED() view returns (uint8)",
  "function MAGIC100_FIRST_BUYER() view returns (bytes32)",
  "function MAGIC_TOKEN_ID() view returns (uint256)",
  "function PAUSABLE_AREXA_TOKEN() view returns (bytes32)",
  "function PAUSABLE_FULL() view returns (bytes32)",
  "function PAUSABLE_MAGIC_TOKEN() view returns (bytes32)",
  "function PAUSABLE_SUBSCR1_TOKEN() view returns (bytes32)",
  "function PAUSABLE_SUBSCR2_TOKEN() view returns (bytes32)",
  "function PAUSABLE_TRADER_TOKEN() view returns (bytes32)",
  "function QUANTITY_VALUE_TYPE() view returns (uint8)",
  "function SUBSCR1_TOKEN_TYPE() view returns (uint256)",
  "function SUBSCR2_TOKEN_TYPE() view returns (uint256)",
  "function TRADER_TOKEN_ID() view returns (uint256)",
  "function accountsByToken(uint256) view returns (address[])",
  "function allowance(address,address,uint256) view returns (uint256)",
  "function approve(address,uint256,uint256,uint256)",
  "function balanceOf(address,uint256) view returns (uint256)",
  "function balanceOfBatch(address[],uint256[]) view returns (uint256[])",
  "function buyArexaToken(uint128,uint8)",
  "function buyArexaTokenAdmin(address,uint128,uint8,uint16)",
  "function buyEdgeSubscription(uint32)",
  "function buyEdgeSubscriptionAdmin(address,uint32,uint16)",
  "function buyMagic100Token()",
  "function buyMagic100TokenAdmin(address,uint16)",
  "function buyOracleSubscription(uint32)",
  "function buyOracleSubscriptionAdmin(address,uint32,uint16)",
  "function buySubscription(uint256,uint32)",
  "function buySubscriptionAdmin(address,uint256,uint32,uint16)",
  "function buyTraderToken(uint128,uint8)",
  "function buyTraderTokenAdmin(address,uint128,uint8,uint16)",
  "function calcDivident(address) view returns (int256)",
  "function calcSubscriptionPrice(uint256,uint32) view returns (uint256)",
  "function calcUnrestrictedAmount(address,uint256,uint256) view returns (uint256)",
  "function checkRestriction(address,uint256,uint256) view returns (bool)",
  "function checkRestrictions(address,uint256[],uint256[]) view returns (bool)",
  "function createSubscription(uint256,uint16,uint8,uint256,uint256,uint256) returns (uint256)",
  "function diamondCut(tuple(address,uint8,bytes4[])[],address,bytes)",
  "function facetAddress(bytes4) view returns (address)",
  "function facetAddresses() view returns (address[])",
  "function facetFunctionSelectors(address) view returns (bytes4[])",
  "function facets() view returns (tuple(address,bytes4[])[])",
  "function getAccountBlackWhiteList(bytes32,address) view returns (bool)",
  "function getArexaERC20Token() view returns (address)",
  "function getArexaIncomeParameter(uint256) view returns (uint32, uint32)",
  "function getArexaTokenPool(uint8) view returns (uint256, uint256)",
  "function getCurrentSubscriptionTokenId(uint256) view returns (uint256)",
  "function getInventory() view returns (bool, int256, int256, int256)",
  "function getInventoryItem(address) view returns (int256, int256, int256)",
  "function getMagic100FirstBuyerWL(address) view returns (bool)",
  "function getPayingToken() view returns (address)",
  "function getPoolAndArexaIncomeBalances() view returns (uint256, uint256, uint256, uint256)",
  "function getRoleAdmin(bytes32) view returns (bytes32)",
  "function getTokenBaseUri() view returns (string)",
  "function getTokenUri(uint256) view returns (string)",
  "function getUri() view returns (string)",
  "function grantRole(bytes32,address)",
  "function hasRole(bytes32,address) view returns (bool)",
  "function implementation() view returns (address)",
  "function isApprovedForAll(address,address) view returns (bool)",
  "function isOperatorSpendingLimitEnabled(uint256) view returns (bool)",
  "function name() view returns (string)",
  "function onERC1155BatchReceived(address,address,uint256[],uint256[],bytes) returns (bytes4)",
  "function onERC1155Received(address,address,uint256,uint256,bytes) returns (bytes4)",
  "function owner() view returns (address)",
  "function pause(bytes32)",
  "function pauseAllToken()",
  "function pauseToken(uint256)",
  "function paused(bytes32) view returns (bool)",
  "function payArexaTokenFromPool(uint8,address,uint32)",
  "function payoutArexaDivident(address,uint256)",
  "function payoutArexaIncome(address,uint256)",
  "function payoutDivident(uint256)",
  "function renounceRole(bytes32)",
  "function revokeRole(bytes32,address)",
  "function safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)",
  "function safeTransferFrom(address,address,uint256,uint256,bytes)",
  "function setAccountBlackWhiteList(bytes32,address,bool)",
  "function setApprovalForAll(address,bool)",
  "function setArexaIncomeParameter(uint256,uint32,uint32)",
  "function setBatchMagic100FirstBuyerWL(address[],bool)",
  "function setDummyImplementation(address)",
  "function setMagic100FirstBuyerWL(address,bool)",
  "function setOperatorSpendingLimitEnabled(uint256,bool)",
  "function setPayingToken(address)",
  "function setRoleAdmin(bytes32,bytes32)",
  "function setTokenBaseURI(string)",
  "function setTokenURI(uint256,string)",
  "function setURI(string)",
  "function stakeArexaToken(uint256)",
  "function supportsInterface(bytes4) view returns (bool)",
  "function symbol() view returns (string)",
  "function tokensByAccount(address) view returns (uint256[])",
  "function totalHolders(uint256) view returns (uint256)",
  "function totalSupply(uint256) view returns (uint256)",
  "function transferOwnership(address)",
  "function unpause(bytes32)",
  "function unpauseAllToken()",
  "function unpauseToken(uint256)",
  "function uri(uint256) view returns (string)",
  "function withdrawArexaToken(address,address,uint256)"
]
